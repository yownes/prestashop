{"version":3,"sources":["pages/auth/auth.module.css","components/molecules/AppInfo.module.css","components/templates/Auth.module.css","components/molecules/HeaderSessionInfo.module.css","components/organisms/AppPreview.module.css","components/molecules/TemplatePreview.module.css","components/molecules/TitleWithAction.module.css","components/molecules/Placeholder.module.css","components/organisms/Header.module.css","components/organisms/TemplateSelector.module.css","components/molecules/CreditCard.module.css","components/organisms/AdminHeader.module.css","components/molecules/FileUpload.module.css","components/molecules/RateSelection.module.css","components/templates/Dashboard.module.css","components/atoms/Logo.tsx","components/atoms/Color.tsx","components/templates/Auth.tsx","pages/auth/ForgottenPassword.tsx","api/mutations.js","api/queries.js","lib/auth.tsx","components/atoms/Loading.tsx","components/molecules/Errors.tsx","pages/auth/Login.tsx","pages/auth/Register.tsx","pages/auth/index.tsx","components/molecules/PrivateRoute.tsx","components/organisms/AdminHeader.tsx","components/organisms/AppPreview.tsx","components/organisms/ChangePassword.tsx","components/organisms/ColorPicker.tsx","components/molecules/HeaderSessionInfo.tsx","api/types/globalTypes.ts","pages/auth/Validate.tsx","lib/connectionToNodes.ts","lib/appBuildState.ts","components/molecules/BuildState.tsx","components/molecules/FileUpload.tsx","components/molecules/AppInfo.tsx","components/molecules/UserState.tsx","components/molecules/ProfileInfo.tsx","components/molecules/TemplatePreview.tsx","components/molecules/TitleWithAction.tsx","components/molecules/Placeholder.tsx","components/organisms/AppPayment.tsx","pages/client/App.tsx","components/molecules/CardSection.tsx","components/organisms/CreateCreateCard.tsx","components/molecules/CheckoutForm.tsx","pages/client/Checkout.tsx","pages/client/EditProfile.tsx","pages/client/NewApp.tsx","components/molecules/RateSelection.tsx","components/organisms/RateTable.tsx","pages/client/Pay.tsx","components/molecules/CreditCard.tsx","pages/client/PaymentMethod.tsx","components/organisms/ProfileDangerZone.tsx","components/molecules/AppsTable.tsx","lib/routes.ts","pages/client/Profile.tsx","pages/admin/Builds.tsx","pages/admin/Clients.tsx","components/molecules/BuildsTable.tsx","pages/admin/Client.tsx","lib/adminRoutes.ts","components/organisms/Header.tsx","components/organisms/Router.tsx","components/organisms/TemplateSelector.tsx","components/templates/Dashboard.tsx","pages/admin/index.tsx","pages/client/index.tsx","pages/Dashboard.tsx","lib/apolloClient.ts","pages/Tos.tsx","App.tsx","serviceWorker.ts","i18n.ts","index.tsx"],"names":["module","exports","Logo","width","height","md","useBreakpoint","vWidth","viewBox","fill","fillRule","d","defaultProps","Color","color","size","rest","style","backgroundColor","display","Auth","image","children","className","styles","container","content","logo","imageContainer","alt","src","ForgottenPassword","t","useTranslation","centerText","onFinish","values","notification","open","message","description","Item","name","rules","required","type","placeholder","buttons","block","to","htmlType","TOKEN_AUTH","gql","REGISTER","VERIFY_ACCOUNT","REFRESH_TOKEN","PASSWORD_CHANGE","UPDATE_APP","DELETE_APP","MODIFY_APP_PAYMENT","CREATE_APP","DELETE_ACCOUNT","BAN_USER","ADD_PAYMENT_METHOD","REMOVE_PAYMENT_METHOD","SUBSCRIBE","UNSUBSCRIBE","inMemoryToken","ME","ACCOUNT_BASIC_DATA_FRAGMENT","MY_PAYMENT_METHODS","MY_ACCOUNT","TEMPLATES","APP","APP_PAYMENTS","PLANS","CLIENTS","CLIENT","BUILDS","Loading","AuthContext","createContext","useAuth","useContext","initialState","loading","isAdmin","isAuthenticated","reducer","state","action","payload","errors","token","user","parseToken","JSON","parse","atob","split","expiry","exp","AuthProvider","auth","useReducer","dispatch","useMutation","tokenAuth","registerMutation","refreshTokenMutation","useLazyQuery","onCompleted","me","isStaff","refreshToken","thRefreshToken","localStorage","getItem","variables","fetchPolicy","then","data","success","ms","Date","getTime","setTimeout","setItem","useEffect","login","logout","removeItem","register","useAuthLogic","Provider","value","Text","Typography","Error","Errors","fields","nonFieldErrors","map","e","key","code","field","Login","location","useLocation","from","pathname","password","email","Password","rightAlign","Register","username","password1","password2","confirmPassword","min","num","getFieldValue","validator","rule","Promise","reject","resolve","dependencies","valuePropName","_","Trans","i18nKey","ns","path","PrivateRoute","render","AdminHeader","Search","AppPreview","id","app","hasChanged","deleteApp","updateApp","history","useHistory","preview","title","onConfirm","update","cache","ok","evict","identify","__typename","__ref","gc","replace","danger","onClick","Title","ChangePassword","passwordChange","level","label","disabled","defaultColors","ColorPicker","onChange","gap","text","target","Group","undefined","padding","HeaderSessionInfo","screens","menu","Divider","info","subtitle","overlay","trigger","icon","EllipsisOutlined","shape","reverse","editable","AccountAccountStatus","BuildBuildStatus","PlanInterval","Validate","useParams","verifyAccount","connectionToNodes","connection","edges","edge","node","getAppBuildState","STALLED","nodes","builds","length","buildStatus","COLORS","QUEUED","GENERATING","UPLOADING","PUBLISHED","WAITING","BuildState","UploadButton","LoadingOutlined","PlusOutlined","ImageUpload","file","onDeleteClicked","useState","filePreview","setFilePreview","uploadElement","useRef","reader","FileReader","onloadend","result","readAsDataURL","fileToPreview","accept","validity","files","valid","Array","hidden","ref","upload","htmlFor","onDragOver","ev","preventDefault","onDragEnter","current","borderColor","onDragLeave","onDrop","dataTransfer","items","i","kind","getAsFile","objectFit","DeleteOutlined","Paragraph","AppInfo","info__logo","info__appName","info__appId","info__stores","storeLinks","ios","infoStores__link","href","android","info__state","REGISTERED","WAITING_PAYMENT","PAID_ACCOUNT","BANNED","UserState","selector","ProfileInfo","profile","layout","bordered","extra","column","xs","sm","lg","accountStatus","TemplatePreview","TitleWithAction","needsConfirmation","placement","confirmationTitle","Placeholder","claim","cta","link","AppPayment","appId","useQuery","updatePayment","mutationData","Panel","header","initialValues","paymentMethod","modifyPaymentMethodApp","error","appsAreEqual","template","baseApp","App","setState","getAppById","gutter","span","selected","val","CARD_ELEMENT_OPTIONS","base","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","options","stripePromise","loadStripe","CreateCreditCard","onCreated","stripe","useStripe","elements","useElements","setError","validateMessages","a","cardElement","getElement","CardElement","createPaymentMethod","card","billing_details","address","city","country","line1","direction","surname","console","log","paymentMethodId","CreateCreditCardContainer","props","CheckoutForm","plan","setPaymentMethodId","createSubscription","justifyContent","amount","interval","MONTH","planId","stripeId","subscribe","Checkout","EditProfile","NewApp","storeInfo","window","__YOWNES_STORE_INFO__","create","useCallback","createApp","storeApp","modify","apps","existing","apiLink","Boolean","RateSelection","strong","selectPlan","plans","filter","active","find","notNull","index","array","RateTable","setInterval","dataSource","features","feat","ids","f","includes","reduce","b","columns","checked","YEAR","dataIndex","fixed","rate","planSet","record","CheckOutlined","CloseOutlined","pagination","scroll","x","y","Pay","CARDS","visa","darkColor","limedark","lightColor","lime","maestro","yellowdark","yellow","mastercard","lightbluedark","lightblue","CreditCard","billing","normalizedData","normalizedBilling","billingData","creditcard","front","ccsingle","dangerouslySetInnerHTML","__html","brand","cardfront","lightcolor","grey","darkcolor","greydark","transform","st2","st3","st4","last4","st5","st6","toUpperCase","st7","st8","st9","exp_month","exp_year","toString","match","st10","st11","PaymentMethod","addPayment","removePaymentMethod","isDrawerOpen","setIsDrawerOpen","customer","defaultPaymentMethod","paymentMethods","billingDetails","detachPaymentMethod","visible","onClose","ProfileDangerZone","setErrors","deleteAccount","AppsTable","allCols","useMemo","cols","urls","routes","exact","redirect","component","setConfirmPassword","isOverlayVisible","setIsOverlayVisible","unsubscribe","profileMenu","userId","dropOut","profieActions","onVisibleChange","verified","showIcon","push","onCancel","okButtonProps","Builds","date","toLocaleDateString","Clients","users","BuildsTable","getBuilds","all","forEach","buildNodes","build","banUser","ban","banData","prev","marginBottom","clientRoutes","adminoutes","Header","route","r","exec","RightOutlined","titleIcon","Router","MyRoute","TemplateSelector","templates","overflowX","Button","previewImg","arrow","RightCircleOutlined","DashboardTemplate","SubHeader","main","AdminDashboard","ClientDashboard","Dashboard","InMemoryCache","typePolicies","BuildType","read","errorLink","onError","graphQLErrors","networkError","locations","uri","__TOKEN__","httpLink","createUploadLink","authLink","setContext","headers","authorization","client","ApolloClient","concat","Tos","fallback","hostname","i18n","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","backend","loadPath","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.985ffc2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"centerText\":\"auth_centerText__3D-rp\",\"rightAlign\":\"auth_rightAlign__1W_pa\",\"buttons\":\"auth_buttons__BnG_P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"AppInfo_info__2BIeo\",\"info__logo\":\"AppInfo_info__logo__1066u\",\"info__appName\":\"AppInfo_info__appName__2AB9_\",\"info__appId\":\"AppInfo_info__appId__3wrZU\",\"info__stores\":\"AppInfo_info__stores__24f-7\",\"info__state\":\"AppInfo_info__state__2LKXs\",\"infoStores__link\":\"AppInfo_infoStores__link__3N9XN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Auth_container__1IMwB\",\"content\":\"Auth_content__xjaiI\",\"image\":\"Auth_image__1KelM\",\"imageContainer\":\"Auth_imageContainer__3-dXS\",\"logo\":\"Auth_logo__3PhOV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"HeaderSessionInfo_container__KvdKl\",\"info\":\"HeaderSessionInfo_info__NaBNB\",\"title\":\"HeaderSessionInfo_title__1YV0Q\",\"subtitle\":\"HeaderSessionInfo_subtitle__3Lx7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AppPreview_container__wIHkI\",\"preview\":\"AppPreview_preview__2a6pD\",\"buttons\":\"AppPreview_buttons__Qzgai\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TemplatePreview_container__6gEDa\",\"image\":\"TemplatePreview_image__1-sPq\",\"name\":\"TemplatePreview_name__3jPxL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TitleWithAction_container__1nMco\",\"title\":\"TitleWithAction_title__2W4EN\",\"action\":\"TitleWithAction_action___CN41\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Placeholder_container__3EQo_\",\"title\":\"Placeholder_title__7WaoD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2BfIk\",\"title\":\"Header_title__3ub0q\",\"titleIcon\":\"Header_titleIcon__--q4E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"TemplateSelector_container__zcVho\",\"overlay\":\"TemplateSelector_overlay__3_Hpw\",\"arrow\":\"TemplateSelector_arrow__1Jk_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"creditcard\":\"CreditCard_creditcard__1NRYJ\",\"cardfront\":\"CreditCard_cardfront__uETpK\",\"cardback\":\"CreditCard_cardback__2hIXe\",\"ccsingle\":\"CreditCard_ccsingle__1Hj8r\",\"lightcolor\":\"CreditCard_lightcolor__3MgFL\",\"darkcolor\":\"CreditCard_darkcolor__2jhju\",\"lightblue\":\"CreditCard_lightblue__3-1zg\",\"lightbluedark\":\"CreditCard_lightbluedark__2ND_X\",\"red\":\"CreditCard_red__2Nj4r\",\"reddark\":\"CreditCard_reddark__xtOF6\",\"purple\":\"CreditCard_purple__39QpX\",\"purpledark\":\"CreditCard_purpledark__36AuB\",\"cyan\":\"CreditCard_cyan__1bnO0\",\"cyandark\":\"CreditCard_cyandark__3fzrp\",\"green\":\"CreditCard_green__1veSt\",\"greendark\":\"CreditCard_greendark__3Ii_N\",\"lime\":\"CreditCard_lime__icYpK\",\"limedark\":\"CreditCard_limedark__3Yifj\",\"yellow\":\"CreditCard_yellow__3oIVA\",\"yellowdark\":\"CreditCard_yellowdark__LNn2c\",\"orange\":\"CreditCard_orange__2EvI5\",\"orangedark\":\"CreditCard_orangedark__1vXb2\",\"grey\":\"CreditCard_grey__3-Yks\",\"greydark\":\"CreditCard_greydark__1sRMU\",\"svgname\":\"CreditCard_svgname__1Jmhl\",\"st2\":\"CreditCard_st2__2TZG5\",\"st3\":\"CreditCard_st3__2Xm5K\",\"st4\":\"CreditCard_st4__X8wkk\",\"st5\":\"CreditCard_st5__1j-jG\",\"st6\":\"CreditCard_st6__3gGwR\",\"st7\":\"CreditCard_st7__OkFwB\",\"st8\":\"CreditCard_st8__1EHts\",\"st9\":\"CreditCard_st9__1T6_m\",\"st10\":\"CreditCard_st10__2H1HA\",\"st11\":\"CreditCard_st11__Z4CQo\",\"st12\":\"CreditCard_st12__1My5d\",\"front\":\"CreditCard_front__5OkOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AdminHeader_container__3LkoF\",\"links\":\"AdminHeader_links__36rFD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"upload\":\"FileUpload_upload__3FY9O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RateSelection_container__2-W83\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Dashboard_main__2_2Wp\"};","import useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\nimport * as React from \"react\";\n\ninterface LogoProps {\n  width?: number;\n  height?: number;\n}\n\nfunction Logo({ width = 150, height }: LogoProps) {\n  const {md} = useBreakpoint();\n  const vWidth = md ? width : width - (width / 4) * 3;\n  return (\n    <svg width={vWidth} height={height} viewBox={`0 0 ${vWidth} 52`}>\n      <title>{\"Artboard\"}</title>\n      <g fill=\"none\" fillRule=\"nonzero\">\n        {md && (\n          (\n          <path\n              d=\"M46.465 35.43c.2.094.458.183.776.267.318.086.63.127.94.127 1 0 1.78-.23 2.343-.691.564-.463 1.072-1.211 1.526-2.245a81.844 81.844 0 01-3.202-7.19A64.151 64.151 0 0146.382 18h2.726c.2.847.439 1.761.722 2.74a74.474 74.474 0 002.057 6.13 55.49 55.49 0 001.253 2.994 77.023 77.023 0 001.798-5.875c.51-1.94.991-3.936 1.446-5.989H59a116.162 116.162 0 01-2.18 7.98 83.63 83.63 0 01-2.59 7.161c-.363.847-.74 1.577-1.13 2.19a6.55 6.55 0 01-1.294 1.511 4.663 4.663 0 01-1.595.875c-.59.19-1.259.283-2.003.283-.2 0-.409-.013-.626-.043a6.572 6.572 0 01-.641-.113 6.216 6.216 0 01-.572-.155 2.727 2.727 0 01-.369-.141l.465-2.119zM72.216 24.5c0-1.611-.378-2.888-1.133-3.832-.756-.944-1.784-1.414-3.084-1.414s-2.329.47-3.083 1.414c-.756.944-1.134 2.22-1.134 3.832 0 1.613.378 2.89 1.134 3.832.754.944 1.783 1.414 3.083 1.414 1.3 0 2.328-.47 3.084-1.414.755-.943 1.133-2.22 1.133-3.832m2.784 0c0 1.135-.173 2.161-.518 3.076a6.974 6.974 0 01-1.448 2.363 6.343 6.343 0 01-2.223 1.524c-.862.358-1.798.537-2.812.537-1.014 0-1.95-.179-2.811-.537a6.318 6.318 0 01-2.223-1.524 6.953 6.953 0 01-1.449-2.363c-.344-.915-.516-1.94-.516-3.076 0-1.117.172-2.138.516-3.063.344-.925.827-1.716 1.449-2.376a6.318 6.318 0 012.223-1.524c.86-.358 1.797-.537 2.811-.537s1.95.179 2.812.537c.86.356 1.601.864 2.223 1.524.62.66 1.104 1.45 1.448 2.376.345.925.518 1.946.518 3.063M90.801 32a122.472 122.472 0 01-1.686-4.745 78.563 78.563 0 01-1.63-5.553 85.566 85.566 0 01-1.615 5.553c-.585 1.78-1.143 3.36-1.671 4.745h-2.297c-.869-1.98-1.719-4.24-2.55-6.778-.831-2.54-1.616-5.28-2.352-8.222h2.834c.188.903.415 1.884.68 2.941.263 1.059.543 2.118.836 3.173.292 1.059.6 2.078.921 3.059.321.981.624 1.837.906 2.567.322-.903.639-1.86.95-2.87.312-1.009.61-2.03.893-3.058.284-1.029.553-2.038.808-3.029.254-.99.476-1.918.666-2.783h2.182c.17.865.377 1.793.624 2.783a117.198 117.198 0 001.686 6.088c.31 1.01.627 1.966.95 2.869.283-.73.58-1.586.892-2.567a108.424 108.424 0 001.772-6.232A81.86 81.86 0 0095.28 17H98a120.661 120.661 0 01-2.352 8.222c-.832 2.538-1.682 4.797-2.551 6.778h-2.296zM101 17.734c.609-.151 1.418-.311 2.429-.48 1.01-.17 2.171-.254 3.485-.254 1.181 0 2.162.164 2.943.494.78.33 1.404.79 1.872 1.383.467.594.795 1.305.985 2.133.19.83.286 1.743.286 2.74V32h-2.657v-7.685c0-.903-.062-1.674-.186-2.316-.124-.64-.33-1.158-.614-1.554a2.439 2.439 0 00-1.143-.86c-.476-.18-1.067-.269-1.772-.269-.284 0-.581.01-.885.028a19.71 19.71 0 00-.872.07c-.276.029-.525.062-.742.1-.22.037-.376.066-.472.085V32H101V17.734zM126.222 23.138c.02-1.156-.282-2.106-.902-2.85-.62-.742-1.474-1.113-2.562-1.113-.612 0-1.151.114-1.618.343a3.833 3.833 0 00-1.188.894c-.325.368-.58.79-.76 1.267a6.03 6.03 0 00-.358 1.459h7.388zM116 24.542c0-1.266.19-2.371.572-3.318.383-.943.887-1.728 1.519-2.352a6.202 6.202 0 012.176-1.404 7.038 7.038 0 012.519-.468c2.004 0 3.542.602 4.61 1.803 1.068 1.202 1.604 3.031 1.604 5.49v.427c0 .175-.01.335-.03.482h-10.192c.115 1.486.562 2.614 1.345 3.385.782.77 2.004 1.157 3.665 1.157.936 0 1.723-.078 2.363-.234.64-.156 1.12-.309 1.447-.455l.37 2.147c-.324.165-.892.34-1.704.522-.81.184-1.73.276-2.763.276-1.298 0-2.418-.188-3.363-.564-.945-.377-1.723-.894-2.334-1.556a6.274 6.274 0 01-1.36-2.353c-.297-.908-.444-1.903-.444-2.985M136.387 29.826c1.034 0 1.803-.138 2.302-.414.5-.275.749-.715.749-1.32 0-.624-.245-1.12-.735-1.487-.491-.367-1.3-.78-2.426-1.237a37.025 37.025 0 01-1.566-.675c-.5-.23-.931-.5-1.294-.812a3.514 3.514 0 01-.871-1.128c-.22-.441-.327-.982-.327-1.624 0-1.266.462-2.27 1.388-3.013.927-.743 2.19-1.116 3.787-1.116.4 0 .8.025 1.2.07.4.046.772.102 1.117.165.345.065.65.133.912.207.264.074.468.136.614.192l-.463 2.202c-.273-.147-.7-.298-1.282-.455-.58-.155-1.28-.234-2.098-.234-.707 0-1.326.143-1.853.428-.526.283-.79.729-.79 1.333 0 .312.06.588.178.827s.3.453.544.646c.246.193.55.372.914.537.363.166.799.339 1.309.522.67.257 1.27.51 1.796.758.528.247.978.535 1.35.865.372.332.659.73.858 1.199.2.468.3 1.04.3 1.72 0 1.32-.486 2.32-1.458 2.999-.972.68-2.356 1.019-4.155 1.019-1.254 0-2.234-.107-2.942-.317-.71-.21-1.19-.372-1.445-.481l.463-2.202c.29.11.753.274 1.389.495.637.22 1.48.33 2.535.33\"\n              fill=\"#4B4A4B\"\n            />\n        )\n        )}\n        <path\n          d=\"M36.123 8.426c-2.393-1.354-6.326.593-8.73 4.798-.942 1.647-1.51 3.339-1.716 4.87-.003.022-.011.035-.014.057l-.023.25c-.01.097-.022.196-.03.292-.202 1.943-.649 4.983-.649 4.983l.001.001c-.677 2.742-1.937 5.985-4.22 7.373-1.094.584-1.933.464-2.261.376-.765-.305-1.711-1.02-2.275-2.713-1.059-3.18.42-7.55.42-7.55l-.019.018c.753-2.369.462-4.53-.898-5.299-1.758-.993-4.616.704-6.38 3.792-1.767 3.088-1.772 6.397-.014 7.39.348.198.75.262 1.168.256l-.028.029c2.602.08 3.471.822 4.615 2.593.958 1.484.373 4.705.04 6.157a6.31 6.31 0 00-.146.59l-.039.15.007-.001c-.243 1.349.031 2.503.842 2.96 1.25.707 3.283-.5 4.538-2.696a7.97 7.97 0 00.352-.706c.023-.04.045-.072.07-.126.632-1.41 1.406-3.911 3.843-7.389 1.054-1.503 2.736-3.034 4.305-4.29.098-.08.201-.162.312-.244.011-.01.022-.018.033-.026.79-.585 1.84-1.197 2.286-1.451.07-.04.139-.076.208-.118l.017-.01h-.002c1.546-.944 3.1-2.557 4.326-4.616 2.69-4.514 2.455-8.347.061-9.7M34.252 27.387c-2.337-1.353-6.138.958-8.486 5.162-2.348 4.205-2.356 8.71-.018 10.064 2.339 1.353 6.138-.958 8.486-5.162 2.348-4.205 2.356-8.711.018-10.064\"\n          fill=\"#00DC99\"\n        />\n      </g>\n    </svg>\n  );\n}\n\nLogo.defaultProps = {\n  width: 150,\n  height: 52,\n};\n\nexport default Logo;\n","import React from \"react\";\n\ninterface ColorProps\n  extends React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLSpanElement>,\n    HTMLSpanElement\n  > {\n  color: string;\n  size?: number;\n}\n\nconst Color = ({ color, size, ...rest }: ColorProps) => {\n  return (\n    <span\n      style={{\n        backgroundColor: color,\n        width: size,\n        height: size,\n        display: \"inline-block\",\n      }}\n      {...rest}\n    ></span>\n  );\n};\n\nColor.defaultProps = {\n  size: 40,\n};\n\nexport default Color;\n","import React from \"react\";\nimport { Logo } from \"../atoms\";\n\nimport styles from \"./Auth.module.css\";\n\ninterface AuthProps {\n  image: string;\n  children: React.ReactNode;\n}\n\nconst Auth = ({ image, children }: AuthProps) => {\n  return (\n    <main className={styles.container}>\n      <div className={styles.content}>\n        <div className={styles.logo}>\n\n        <Logo width={300} height={104} />\n        </div>\n        {children}\n      </div>\n      <div className={styles.imageContainer}>\n        <img alt=\"\" src={image} className={styles.image} />\n      </div>\n    </main>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Auth from \"../../components/templates/Auth\";\nimport { Form, Input, Button, notification } from \"antd\";\n\nimport styles from \"./auth.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst ForgottenPassword = () => {\n  const { t } = useTranslation([\"auth\", \"translation\"]);\n  return (\n    <Auth image=\"https://images.unsplash.com/photo-1593642634402-b0eb5e2eebc9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\">\n      <div>\n        <h1 className={styles.centerText}>{t(\"forgotPassword\")}</h1>\n        <Form\n          onFinish={(values) => {\n            //TODO: Send to server\n            notification.open({\n              message: t(\"forgotNotification.message\"),\n              description: t(\"forgotNotification.description\"),\n            });\n          }}\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[\n              { required: true, message: t(\"required.email\") },\n              { type: \"email\" },\n            ]}\n          >\n            <Input placeholder={t(\"translation:email\")} />\n          </Form.Item>\n          <div className={styles.buttons}>\n            <Button block type=\"ghost\">\n              <Link to={`/auth/login`} style={{ display: \"block\" }}>\n                {t(\"login\")}\n              </Link>\n            </Button>\n            <Button block type=\"primary\" htmlType=\"submit\">\n              {t(\"sendMail\")}\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Auth>\n  );\n};\n\nexport default ForgottenPassword;\n","import { gql } from \"@apollo/client\";\n\n/**\n * AUTH\n */\n\nexport const TOKEN_AUTH = gql`\n  mutation TokenAuth($password: String!, $email: String, $username: String) {\n    tokenAuth(password: $password, email: $email, username: $username) {\n      token\n      refreshToken\n      success\n      errors\n      user {\n        id\n        email\n        username\n        firstName\n        lastName\n        isStaff\n        verified\n      }\n    }\n  }\n`;\n\nexport const REGISTER = gql`\n  mutation Register(\n    $email: String!\n    $username: String!\n    $password1: String!\n    $password2: String!\n  ) {\n    register(\n      email: $email\n      username: $username\n      password1: $password1\n      password2: $password2\n    ) {\n      success\n      errors\n      token\n      refreshToken\n    }\n  }\n`;\n\nexport const VERIFY_TOKEN = gql`\n  mutation VerifyToken($token: String!) {\n    verifyToken(token: $token) {\n      payload\n      success\n      errors\n    }\n  }\n`;\n\nexport const VERIFY_ACCOUNT = gql`\n  mutation VerifyAccount($token: String!) {\n    verifyAccount(token: $token) {\n      success\n      errors\n    }\n  }\n`;\n\nexport const REFRESH_TOKEN = gql`\n  mutation RefreshToken($refreshToken: String!) {\n    refreshToken(refreshToken: $refreshToken) {\n      token\n      refreshToken\n      success\n      errors\n    }\n  }\n`;\n\nexport const PASSWORD_CHANGE = gql`\n  mutation PasswordChange(\n    $oldPassword: String!\n    $newPassword1: String!\n    $newPassword2: String!\n  ) {\n    passwordChange(\n      oldPassword: $oldPassword\n      newPassword1: $newPassword1\n      newPassword2: $newPassword2\n    ) {\n      success\n      errors\n      token\n      refreshToken\n    }\n  }\n`;\n\n/**\n * APP\n */\n\nexport const UPDATE_APP = gql`\n  mutation UpdateApp($data: StoreAppInput!, $id: ID!) {\n    updateApp(data: $data, id: $id) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const DELETE_APP = gql`\n  mutation DeleteApp($id: ID!) {\n    deleteApp(id: $id) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const MODIFY_APP_PAYMENT = gql`\n  mutation ModifyAppPayment($data: PaymentMethodAppInput!, $appId: ID!) {\n    modifyPaymentMethodApp(data: $data, storeAppId: $appId) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const CREATE_APP = gql`\n  mutation CreateApp($data: StoreAppInput!) {\n    createApp(data: $data) {\n      ok\n      error\n      storeApp {\n        id\n        logo\n        name\n        storeLinks {\n          ios\n          android\n        }\n        builds {\n          edges {\n            node {\n              id\n              buildStatus\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * ACCOUNT\n */\n\n export const DELETE_ACCOUNT = gql`\n  mutation DeleteAccount($password: String!) {\n    deleteAccount(password: $password) {\n      success\n      errors\n    }\n  }\n `\n\n export const BAN_USER = gql`\n   mutation BanUser($ban: Boolean!, $userId: ID!) {\n     banUser(ban: $ban, userId: $userId) {\n       ok\n       error\n     }\n   }\n `;\n\n/**\n * PAYMENTS\n */\n\nexport const ADD_PAYMENT_METHOD = gql`\n  mutation AddPaymentMethod($paymentMethodId: ID!) {\n    addPaymentMethod(paymentMethodId: $paymentMethodId) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const REMOVE_PAYMENT_METHOD = gql`\n  mutation RemovePaymentMethod($paymentMethodId: ID!) {\n    detachPaymentMethod(paymentMethodId: $paymentMethodId) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const SUBSCRIBE = gql`\n  mutation Subscribe($paymentMethodId: ID!, $planId: ID!) {\n    subscribe(paymentMethodId: $paymentMethodId, planId: $planId) {\n      ok\n      error\n    }\n  }\n`;\n\nexport const UNSUBSCRIBE = gql`\n  mutation Unsubscribe($userId: ID!) {\n    dropOut(userId: $userId) {\n      ok\n      error\n    }\n  }\n`;","import { gql } from \"@apollo/client\";\n\nexport const ME = gql`\n  query Me {\n    me {\n      id\n      email\n      username\n      isStaff\n    }\n  }\n`;\n\nexport const ACCOUNT_BASIC_DATA_FRAGMENT = gql`\n  fragment AccountBasicData on UserNode {\n    username\n    email\n    accountStatus\n    verified\n    isActive\n  }\n`;\n\nexport const MY_PAYMENT_METHODS = gql`\n  query MyPaymentMethods {\n    me {\n      id\n      customer {\n        id\n        defaultPaymentMethod {\n          id\n          stripeId\n        }\n        paymentMethods {\n          edges {\n            node {\n              id\n              stripeId\n              card\n              billingDetails\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const MY_ACCOUNT = gql`\n  query MyAccount {\n    me {\n      id\n      ...AccountBasicData\n      apps {\n        edges {\n          node {\n            id\n            logo\n            name\n            storeLinks {\n              ios\n              android\n            }\n            builds {\n              edges {\n                node {\n                  id\n                  buildStatus\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  ${ACCOUNT_BASIC_DATA_FRAGMENT}\n`;\n\nexport const TEMPLATES = gql`\n  query Templates {\n    templates {\n      edges {\n        node {\n          id\n          name\n          previewImg\n        }\n      }\n    }\n  }\n`;\n\nexport const APP = gql`\n  query App($id: ID!) {\n    app(id: $id) {\n      id\n      name\n      color {\n        color\n        text\n      }\n      apiLink\n      template {\n        id\n      }\n      logo\n      builds {\n        edges {\n          node {\n            id\n            buildStatus\n          }\n        }\n      }\n      storeLinks {\n        ios\n        android\n      }\n    }\n  }\n`;\n\nexport const APP_PAYMENTS = gql`\n  query AppPayments($id: ID!) {\n    app(id: $id) {\n      id\n      paymentMethod {\n        id\n        stripeTestPublic\n        stripeTestSecret\n        stripeProdPublic\n        stripeProdSecret\n      }\n    }\n  }\n`;\n\nexport const PLANS = gql`\n  query Plans {\n    features {\n      id\n      name\n    }\n    plans {\n      edges {\n        node {\n          id\n          name\n          description\n          features {\n            id\n          }\n          planSet {\n            edges {\n              node {\n                id\n                stripeId\n                amount\n                interval\n                active\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n/**\n * ADMIN\n */\n\nexport const CLIENTS = gql`\n  query Clients($first: Int, $last: Int) {\n    users(first: $first, last: $last) {\n      edges {\n        node {\n          id\n          username\n          apps {\n            edges {\n              node {\n                id\n              }\n            }\n          }\n          accountStatus\n        }\n      }\n    }\n  }\n`;\n\nexport const CLIENT = gql`\n  query Client($id: ID!) {\n    user(id: $id) {\n      id\n      ...AccountBasicData\n      apps {\n        edges {\n          node {\n            id\n            name\n            logo\n            apiLink\n            storeLinks {\n              ios\n              android\n            }\n            builds {\n              edges {\n                node {\n                  id\n                  buildId\n                  date\n                  buildStatus\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  ${ACCOUNT_BASIC_DATA_FRAGMENT}\n`;\n\nexport const BUILDS = gql`\n  query Builds($first: Int, $last: Int) {\n    builds(first: $first, last: $last) {\n      edges {\n        node {\n          id\n          buildId\n          date\n          buildStatus\n          app {\n            id\n            name\n            customer {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`;","import React, { useEffect, createContext, useContext, useReducer } from \"react\";\nimport { useMutation, useLazyQuery } from \"@apollo/client\";\nimport { REFRESH_TOKEN, REGISTER, TOKEN_AUTH } from \"../api/mutations\";\nimport { Register, RegisterVariables } from \"../api/types/Register\";\nimport { TokenAuth, TokenAuthVariables } from \"../api/types/TokenAuth\";\nimport { ME } from \"../api/queries\";\nimport { Me, Me_me } from \"../api/types/Me\";\nimport Loading from \"../components/atoms/Loading\";\nimport { RefreshToken, RefreshTokenVariables } from \"../api/types/RefreshToken\";\n\nexport const TOKEN_KEY = \"yownesToken\";\n\ninterface Error {\n  code: string;\n  message: string;\n}\n\ninterface Token {\n  token: string;\n  expiry: number;\n}\n\nexport interface Errors {\n  nonFieldErrors?: Error[];\n  [key: string]: Error[] | undefined;\n}\n\ninterface AuthState {\n  isAdmin: boolean;\n  token?: Token;\n  loading: boolean;\n  errors?: Errors;\n  user?: Me_me;\n  isAuthenticated: boolean;\n}\n\ninterface IAuth extends AuthState {\n  login: (variables: TokenAuthVariables) => Promise<void>;\n  register: (variables: RegisterVariables) => Promise<void>;\n  logout: () => void;\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\ntype AuthStateAction =\n  | {\n      type: \"LOGIN\";\n      payload: {\n        isAdmin?: boolean;\n        token?: Token;\n        user?: Me_me;\n      };\n    }\n  | {\n      type: \"LOADING\";\n      payload: boolean;\n    }\n  | {\n      type: \"ERROR\";\n      payload: Errors;\n    }\n  | {\n      type: \"LOGOUT\";\n    };\n\nconst AuthContext = createContext<Partial<IAuth>>({});\n\nexport const useAuth = () => useContext(AuthContext);\n\nconst initialState: AuthState = {\n  loading: true,\n  isAdmin: false,\n  isAuthenticated: false,\n};\n\n\nlet inMemoryToken: string;\n\nexport function getToken() {\n  return inMemoryToken;\n}\n\nfunction reducer(state: AuthState, action: AuthStateAction): AuthState {\n  switch (action.type) {\n    case \"LOADING\":\n      return {\n        ...state,\n        loading: action.payload,\n      };\n    case \"ERROR\":\n      return {\n        ...state,\n        errors: action.payload,\n        loading: false,\n        isAuthenticated: false,\n      };\n    case \"LOGIN\":\n      if (action.payload.token) {\n        inMemoryToken = action.payload.token.token;\n      }\n      return {\n        ...state,\n        isAdmin: action.payload.isAdmin || false,\n        token: action.payload.token || state.token,\n        loading: false,\n        user: action.payload.user,\n        isAuthenticated: action.payload.token ? true : !!state.token,\n      };\n    case \"LOGOUT\":\n      return { ...initialState, loading: false };\n    default:\n      return state;\n  }\n}\n\nfunction parseToken(token: string): Token {\n  const payload = JSON.parse(atob(token.split(\".\")[1]));\n  const expiry = payload.exp;\n  return {\n    token,\n    expiry,\n  };\n}\n\nfunction useAuthLogic(): IAuth {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [tokenAuth] = useMutation<TokenAuth, TokenAuthVariables>(TOKEN_AUTH);\n  const [registerMutation] = useMutation<Register, RegisterVariables>(REGISTER);\n  const [refreshTokenMutation] = useMutation<\n    RefreshToken,\n    RefreshTokenVariables\n  >(REFRESH_TOKEN);\n  const [me] = useLazyQuery<Me>(ME, {\n    onCompleted({ me }) {\n      if (me) {\n        dispatch({\n          type: \"LOGIN\",\n          payload: { isAdmin: me?.isStaff, user: me },\n        });\n      }\n    },\n  });\n\n  function login(variables: TokenAuthVariables) {\n    return tokenAuth({\n      variables,\n    }).then(({ data }) => {\n      if (data?.tokenAuth?.success && data.tokenAuth.token) {\n        if (data.tokenAuth.refreshToken) {\n          localStorage.setItem(TOKEN_KEY, data.tokenAuth.refreshToken);\n        }\n        const token = parseToken(data.tokenAuth.token);\n        setTimeout(refreshToken, token.expiry * 1000 - new Date().getTime());\n        if (data.tokenAuth.user) {\n          dispatch({\n            type: \"LOGIN\",\n            payload: {\n              token,\n              isAdmin: data.tokenAuth.user?.isStaff ?? false,\n              user: data.tokenAuth.user,\n            },\n          });\n        }\n      } else {\n        //TODO: Error handling\n        dispatch({ type: \"ERROR\", payload: data?.tokenAuth?.errors });\n      }\n    });\n  }\n\n  function register(variables: RegisterVariables) {\n    return registerMutation({\n      variables,\n    }).then(({ data }) => {\n      if (data?.register?.success && data.register.token) {\n        if (data.register.refreshToken) {\n          localStorage.setItem(TOKEN_KEY, data.register.refreshToken);\n        }\n        dispatch({\n          type: \"LOGIN\",\n          payload: { token: parseToken(data.register.token) },\n        });\n      } else {\n        dispatch({ type: \"ERROR\", payload: data?.register?.errors });\n      }\n    });\n  }\n\n  function logout() {\n    localStorage.removeItem(TOKEN_KEY);\n    dispatch({ type: \"LOGOUT\" });\n  }\n\n  function refreshToken() {\n    const thRefreshToken = localStorage.getItem(TOKEN_KEY);\n    if (thRefreshToken) {\n      refreshTokenMutation({\n        variables: { refreshToken: thRefreshToken },\n        fetchPolicy: \"no-cache\",\n      }).then(({ data }) => {\n        if (data?.refreshToken?.success && data.refreshToken.token) {\n          const token = parseToken(data.refreshToken.token);\n          const ms = token.expiry * 1000 - new Date().getTime();\n\n          setTimeout(refreshToken, ms);\n\n          dispatch({\n            type: \"LOGIN\",\n            payload: { token },\n          });\n\n          me();\n\n          if (data.refreshToken.refreshToken) {\n            localStorage.setItem(TOKEN_KEY, data.refreshToken.refreshToken);\n          }\n        } else {\n          dispatch({ type: \"ERROR\", payload: data?.refreshToken?.errors });\n        }\n      });\n    }\n  }\n\n  useEffect(() => {\n    const t = localStorage.getItem(TOKEN_KEY);\n    if (t) {\n      refreshToken();\n    } else {\n      dispatch({ type: \"LOADING\", payload: false });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return {\n    login,\n    logout,\n    register,\n    ...state,\n  };\n}\n\nexport const AuthProvider = ({ children }: AuthProviderProps) => {\n  const auth = useAuthLogic();\n  if (auth.loading) {\n    return <Loading />;\n  }\n  return <AuthContext.Provider value={auth}>{children}</AuthContext.Provider>;\n};\n","import React from \"react\";\n\nconst Loading = () => {\n  return <div>Loading...</div>;\n};\n\nexport default Loading;\n","import React from \"react\";\nimport { Errors as IErrors } from \"../../lib/auth\";\nimport { Typography } from \"antd\";\n\nconst { Text } = Typography;\n\ninterface ErrorsProps {\n  errors?: IErrors;\n  fields?: string[];\n}\n\nconst Error = ({ message }: { message: string }) => (\n  <Text type=\"danger\">{message}</Text>\n);\n\nconst Errors = ({ errors, fields }: ErrorsProps) => {\n  if (!errors) {\n    return null;\n  }\n  return (\n    <div>\n      {errors.nonFieldErrors?.map((e) => (\n        <Error key={e.code} message={e.message} />\n      ))}\n      {fields &&\n        fields.map((field) =>\n          errors[field]?.map((e) => <Error key={e.code} message={e.message} />)\n        )}\n    </div>\n  );\n};\n\nexport default Errors;\n","import React from \"react\";\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\nimport Auth from \"../../components/templates/Auth\";\nimport { useAuth } from \"../../lib/auth\";\nimport { Form, Input, Button } from \"antd\";\n\nimport styles from \"./auth.module.css\";\nimport Errors from \"../../components/molecules/Errors\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface LocationState {\n  from: {\n    pathname: string;\n  };\n}\n\nconst Login = () => {\n  const location = useLocation<LocationState>();\n  const { t } = useTranslation([\"auth\", \"translation\"]);\n  let { from } = location.state || { from: { pathname: \"/\" } };\n  const { login, isAuthenticated, errors } = useAuth();\n  if (isAuthenticated) {\n    return <Redirect to={from} />;\n  }\n  return (\n    <Auth image=\"https://images.unsplash.com/photo-1593642634402-b0eb5e2eebc9?ixlib=rb-1.2.1&auto=format&fit=crop&w=1050&q=80\">\n      <div>\n        <h1 className={styles.centerText}>{t(\"welcome\")}</h1>\n        <Errors errors={errors} fields={[\"email\", \"password\"]} />\n        <Form\n          onFinish={(values) => {\n            login?.({ password: values.password, email: values.email });\n          }}\n        >\n          <Form.Item\n            name=\"email\"\n            rules={[\n              { required: true, message: t(\"required.mail\") },\n              { type: \"email\" },\n            ]}\n          >\n            <Input placeholder={t(\"translation:email\")} />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[{ required: true, message: t(\"required.password\") }]}\n          >\n            <Input.Password placeholder={t(\"password\")} />\n          </Form.Item>\n          <Link to={`/auth/password`} className={styles.rightAlign}>\n            {t(\"forgotPassword\")}\n          </Link>\n          <div className={styles.buttons}>\n            <Button block type=\"ghost\">\n              <Link to={`/auth/register`} style={{ display: \"block\" }}>\n                {t(\"createAccount\")}\n              </Link>\n            </Button>\n            <Button block type=\"primary\" htmlType=\"submit\">\n              {t(\"connect\")}\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Auth>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Link, Redirect, useLocation } from \"react-router-dom\";\nimport Auth from \"../../components/templates/Auth\";\nimport { Form, Input, Button, Checkbox } from \"antd\";\n\nimport styles from \"./auth.module.css\";\nimport { useAuth } from \"../../lib/auth\";\nimport Errors from \"../../components/molecules/Errors\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\ninterface LocationState {\n  from: {\n    pathname: string;\n  };\n}\n\nconst Register = () => {\n  const location = useLocation<LocationState>();\n  const { t } = useTranslation([\"auth\", \"translation\"]);\n  let { from } = location.state || { from: { pathname: \"/\" } };\n  const { register, isAuthenticated, errors } = useAuth();\n  if (isAuthenticated) {\n    return <Redirect to={from} />;\n  }\n  return (\n    <Auth image=\"https://images.unsplash.com/photo-1586244439413-bc2288941dda?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\">\n      <div>\n        <h1 className={styles.centerText}>{t(\"createAnAccount\")}</h1>\n        <Errors errors={errors} fields={[\"email\", \"password1\", \"password2\"]} />\n        <Form\n          onFinish={(values) => {\n            register?.({\n              email: values.email,\n              username: values.name,\n              password1: values.password,\n              password2: values.confirmPassword,\n            });\n          }}\n        >\n          <Form.Item\n            name=\"name\"\n            rules={[\n              { required: true, message: t(\"required.name\") },\n              { min: 2, message: t(\"required.min\", { num: 2 }) },\n            ]}\n          >\n            <Input placeholder={t(\"translation:name\")} />\n          </Form.Item>\n          <Form.Item\n            name=\"email\"\n            rules={[\n              { required: true, message: t(\"required.email\") },\n              { type: \"email\" },\n            ]}\n          >\n            <Input placeholder={t(\"translation:email\")} />\n          </Form.Item>\n          <Form.Item\n            name=\"password\"\n            rules={[\n              { required: true, message: t(\"required.password\") },\n              {\n                min: 8,\n                message: t(\"required.minPassword\", { num: 8 }),\n              },\n            ]}\n          >\n            <Input.Password placeholder={t(\"password\")} />\n          </Form.Item>\n          <Form.Item\n            name=\"confirmPassword\"\n            rules={[\n              { required: true, message: t(\"required.passwordMatch\") },\n              ({ getFieldValue }) => ({\n                validator(rule, value) {\n                  if (!value || getFieldValue(\"password\") === value) {\n                    return Promise.resolve();\n                  }\n                  return Promise.reject(t(\"required.passwordMatch\"));\n                },\n              }),\n            ]}\n            dependencies={[\"password\"]}\n          >\n            <Input.Password placeholder={t(\"confirmPassword\")} />\n          </Form.Item>\n          <Form.Item\n            name=\"agreement\"\n            valuePropName=\"checked\"\n            rules={[\n              {\n                validator: (_, value) =>\n                  value ? Promise.resolve() : Promise.reject(t(\"required.tos\")),\n              },\n            ]}\n          >\n            <Checkbox>\n              <Trans i18nKey=\"acceptTos\" ns=\"auth\">\n                Acepto los <Link to=\"/tos\">Términos y Condiciones</Link>\n              </Trans>\n            </Checkbox>\n          </Form.Item>\n          <div className={styles.buttons}>\n            <Button block type=\"ghost\">\n              <Link to={`/auth/login`}>{t(\"connect\")}</Link>\n            </Button>\n            <Button block type=\"primary\" htmlType=\"submit\">\n              {t(\"createAccount\")}\n            </Button>\n          </div>\n        </Form>\n      </div>\n    </Auth>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport ForgottenPassword from \"./ForgottenPassword\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nconst Auth = () => {\n  return (\n    <Switch>\n      <Route path={`/auth/login`}>\n        <Login />\n      </Route>\n      <Route path={`/auth/register`}>\n        <Register />\n      </Route>\n      <Route path={`/auth/password`}>\n        <ForgottenPassword />\n      </Route>\n    </Switch>\n  );\n};\n\nexport default Auth;\n","import React from \"react\";\nimport { Redirect, Route, RouteProps } from \"react-router-dom\";\nimport { useAuth } from \"../../lib/auth\";\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nfunction PrivateRoute({ children, ...rest }: RouteProps) {\n  const { isAuthenticated } = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        isAuthenticated ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/auth/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n}\n\nexport default PrivateRoute;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Input } from \"antd\";\n\nimport styles from \"./AdminHeader.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst AdminHeader = () => {\n  const { t } = useTranslation(\"admin\");\n  return (\n    <div className={styles.container}>\n      <div>\n        <Link to=\"/clients\">{t(\"clients\")}</Link>\n        <Link to=\"/builds\">{t(\"builds\")}</Link>\n      </div>\n      <div>\n        <Input.Search />\n      </div>\n    </div>\n  );\n};\n\nexport default AdminHeader;\n","import React from \"react\";\nimport { Button, message, Popconfirm } from \"antd\";\nimport { useMutation } from \"@apollo/client\";\nimport { DELETE_APP, UPDATE_APP } from \"../../api/mutations\";\nimport { DeleteApp, DeleteAppVariables } from \"../../api/types/DeleteApp\";\nimport { UpdateApp, UpdateAppVariables } from \"../../api/types/UpdateApp\";\nimport { useHistory } from \"react-router-dom\";\n\nimport styles from \"./AppPreview.module.css\";\nimport { StoreAppInput } from \"../../api/types/globalTypes\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\ninterface AppPreviewProps {\n  app: StoreAppInput;\n  id: string;\n  hasChanged: boolean;\n}\n\nconst AppPreview = ({ id, app, hasChanged }: AppPreviewProps) => {\n  const { t } = useTranslation(\"client\");\n  const [deleteApp] = useMutation<DeleteApp, DeleteAppVariables>(DELETE_APP);\n  const [updateApp] = useMutation<UpdateApp, UpdateAppVariables>(UPDATE_APP);\n  const history = useHistory();\n  return (\n    <div className={styles.container}>\n      <div className={styles.preview}></div>\n      <div className={styles.buttons}>\n        <Popconfirm\n          title={\n            <Trans i18nKey=\"warnings.app\" ns=\"client\">\n              <div>¿Realmente deseas eliminar la App?</div>\n              <div>Será retirada de la AppStore y PlayStore</div>\n            </Trans>\n          }\n          onConfirm={() => {\n            deleteApp({\n              variables: { id },\n              update(cache, { data }) {\n                if (data?.deleteApp?.ok) {\n                  cache.evict({\n                    id: cache.identify({\n                      __typename: \"StoreAppType\",\n                      __ref: id,\n                    }),\n                  });\n                  cache.gc();\n                  message.success(t(\"appDeleted\"));\n                  history.replace(\"/profile\");\n                }\n              },\n            });\n          }}\n        >\n          <Button type=\"primary\" danger>\n            {t(\"deleteApp\")}\n          </Button>\n        </Popconfirm>\n        {hasChanged && (\n          <Button\n            type=\"ghost\"\n            onClick={() => {\n              const data = { ...app };\n              // Don't send the image if it's not a Blob\n              // If string, means the logo is the server URL\n              if (typeof data.logo === \"string\") {\n                delete data.logo;\n              }\n              updateApp({\n                variables: {\n                  id: id,\n                  data,\n                },\n              });\n            }}\n          >\n            {t(\"saveChanges\")}\n          </Button>\n        )}\n        <Button type=\"primary\">{t(\"publishApp\")}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default AppPreview;\n","import React from \"react\";\nimport { useMutation } from \"@apollo/client\";\nimport { Button, Form, Input, Typography } from \"antd\";\nimport { PASSWORD_CHANGE } from \"../../api/mutations\";\nimport {\n  PasswordChange,\n  PasswordChangeVariables,\n} from \"../../api/types/PasswordChange\";\nimport Errors from \"../molecules/Errors\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title, Text } = Typography;\n\nconst ChangePassword = () => {\n  const { t } = useTranslation(\"client\");\n  const [passwordChange, { loading, data }] = useMutation<\n    PasswordChange,\n    PasswordChangeVariables\n  >(PASSWORD_CHANGE);\n  return (\n    <>\n      <Title level={2}>{t(\"changePassword\")}</Title>\n      <Errors errors={data?.passwordChange?.errors} />\n      {data?.passwordChange?.success && (\n        <Text type=\"success\">{t(\"changePasswordSuccessful\")}</Text>\n      )}\n      <Form\n        onFinish={(values) => {\n          passwordChange({\n            variables: {\n              ...values,\n            },\n          });\n        }}\n      >\n        <Form.Item\n          label={t(\"oldPassword\")}\n          name=\"oldPassword\"\n          rules={[{ required: true }]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          label={t(\"newPassword\")}\n          name=\"newPassword1\"\n          rules={[{ required: true }, { min: 8 }]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item\n          label={t(\"newPassword2\")}\n          name=\"newPassword2\"\n          rules={[{ required: true }, { min: 8 }]}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            htmlType=\"submit\"\n            type=\"primary\"\n            disabled={loading}\n            loading={loading}\n          >\n            {t(\"changePassword\")}\n          </Button>\n        </Form.Item>\n      </Form>\n    </>\n  );\n};\n\nexport default ChangePassword;\n","import React from \"react\";\nimport Title from \"antd/lib/typography/Title\";\nimport Paragraph from \"antd/lib/typography/Paragraph\";\nimport { Input, Radio } from \"antd\";\nimport { Color } from \"../atoms\";\nimport { StoreAppColorInput } from \"../../api/types/globalTypes\";\nimport { useTranslation } from \"react-i18next\";\n\ntype TextColor = \"white\" | \"black\";\n\ntype ColorInput = { color: string; text: TextColor };\n\ninterface ColorPickerProps {\n  value?: StoreAppColorInput;\n  onChange: (change: ColorInput) => void;\n}\n\nconst defaultColors = [\"#AF43BE\", \"#FD8090\", \"#C4FFFF\", \"#08DEEA\", \"#1261D1\"];\n\nconst ColorPicker = ({ value, onChange }: ColorPickerProps) => {\n  const { t } = useTranslation(\"client\");\n  return (\n    <div>\n      <Title level={3}>{t(\"color\")}</Title>\n\n      <Paragraph>{t(\"colorPalette\")}</Paragraph>\n      <div style={{ display: \"flex\", gap: 15 }}>\n        {defaultColors.map((color) => (\n          <Color\n            color={color}\n            onClick={() =>\n              onChange({ color, text: (value?.text as TextColor) ?? \"white\" })\n            }\n            size={20}\n          />\n        ))}\n      </div>\n\n      <Paragraph>{t(\"selectedColor\")}</Paragraph>\n\n      <Input\n        placeholder=\"#333333\"\n        style={{ width: 150 }}\n        value={value?.color ?? defaultColors[0]}\n        onChange={(e) =>\n          onChange({\n            color: e.target.value,\n            text: (value?.text as TextColor) ?? \"white\",\n          })\n        }\n      />\n      <div>\n        <Color color={value?.color ?? defaultColors[0]} size={80}></Color>\n      </div>\n      <Paragraph>{t(\"textColor\")}</Paragraph>\n      <Radio.Group\n        name=\"text\"\n        value={value?.text ?? \"white\"}\n        onChange={(e) => {\n          onChange({\n            color: value?.color ?? defaultColors[0],\n            text: e.target.value,\n          });\n        }}\n      >\n        <Radio value=\"white\">\n          <span\n            style={{\n              backgroundColor: value?.color ?? undefined,\n              color: \"white\",\n              padding: \"1rem\",\n            }}\n          >\n            {t(\"white\")}\n          </span>\n        </Radio>\n        <Radio value=\"black\">\n          <span\n            style={{\n              backgroundColor: value?.color ?? undefined,\n              color: \"black\",\n              padding: \"1rem\",\n            }}\n          >\n            {t(\"black\")}\n          </span>\n        </Radio>\n      </Radio.Group>\n    </div>\n  );\n};\n\nexport default ColorPicker;\n","import React from \"react\";\nimport { Button, Dropdown, Menu } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { useAuth } from \"../../lib/auth\";\n\nimport styles from \"./HeaderSessionInfo.module.css\";\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface HeaderSessionInfoProps {\n  name: string;\n  email: string;\n}\n\nconst HeaderSessionInfo = ({ name, email }: HeaderSessionInfoProps) => {\n  const { logout } = useAuth();\n  const screens = useBreakpoint();\n  const { t } = useTranslation();\n\n  const menu = (\n    <Menu>\n      <Menu.Item key=\"0\">\n        <Link to=\"/profile\">{t(\"profile\")}</Link>\n      </Menu.Item>\n      <Menu.Divider />\n      <Menu.Item\n        onClick={() => {\n          logout?.();\n        }}\n        key=\"1\"\n      >\n        {t(\"logout\")}\n      </Menu.Item>\n    </Menu>\n  );\n  return (\n    <div className={styles.container}>\n      {screens.md && (\n        <div className={styles.info}>\n            <span className={styles.title}>\n              <Link to=\"/profile\">{name}</Link>\n            </span>\n            <span className={styles.subtitle}>{email}</span>\n          </div>\n      )}\n      <Dropdown overlay={menu} trigger={[\"click\"]}>\n        <Button icon={<EllipsisOutlined />} shape=\"circle\" />\n      </Dropdown>\n    </div>\n  );\n};\n\nHeaderSessionInfo.defaultProps = {\n  reverse: false,\n  editable: false,\n};\n\nexport default HeaderSessionInfo;\n","/* tslint:disable */\n/* eslint-disable */\n// @generated\n// This file was automatically generated and should not be edited.\n\n//==============================================================\n// START Enums and Input Objects\n//==============================================================\n\n/**\n * An enumeration.\n */\nexport enum AccountAccountStatus {\n  BANNED = \"BANNED\",\n  PAID_ACCOUNT = \"PAID_ACCOUNT\",\n  REGISTERED = \"REGISTERED\",\n  WAITING_PAYMENT = \"WAITING_PAYMENT\",\n}\n\n/**\n * An enumeration.\n */\nexport enum BuildBuildStatus {\n  GENERATING = \"GENERATING\",\n  PUBLISHED = \"PUBLISHED\",\n  QUEUED = \"QUEUED\",\n  STALLED = \"STALLED\",\n  UPLOADING = \"UPLOADING\",\n  WAITING = \"WAITING\",\n}\n\n/**\n * An enumeration.\n */\nexport enum PlanInterval {\n  DAY = \"DAY\",\n  MONTH = \"MONTH\",\n  WEEK = \"WEEK\",\n  YEAR = \"YEAR\",\n}\n\nexport interface PaymentMethodAppInput {\n  stripeTestPublic: string;\n  stripeTestSecret: string;\n  stripeProdPublic: string;\n  stripeProdSecret: string;\n}\n\nexport interface StoreAppColorInput {\n  color?: string | null;\n  text?: string | null;\n}\n\nexport interface StoreAppInput {\n  name: string;\n  color?: StoreAppColorInput | null;\n  links?: StoreAppLinksInput | null;\n  apiLink?: string | null;\n  template?: string | null;\n  logo?: any | null;\n}\n\nexport interface StoreAppLinksInput {\n  androidLink?: string | null;\n  iosLink?: string | null;\n}\n\n//==============================================================\n// END Enums and Input Objects\n//==============================================================\n","import React, { useEffect } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { useMutation } from \"@apollo/client\";\nimport { VERIFY_ACCOUNT } from \"../../api/mutations\";\nimport {\n  VerifyAccount,\n  VerifyAccountVariables,\n} from \"../../api/types/VerifyAccount\";\nimport Errors from \"../../components/molecules/Errors\";\nimport { Button } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface ValidateParamTypes {\n  token: string;\n}\n\nconst Validate = () => {\n  const location = useParams<ValidateParamTypes>();\n  const { t } = useTranslation(\"auth\");\n  const [verifyAccount, { loading, data }] = useMutation<\n    VerifyAccount,\n    VerifyAccountVariables\n  >(VERIFY_ACCOUNT);\n\n  useEffect(() => {\n    verifyAccount({ variables: { token: location.token } });\n  }, [location.token, verifyAccount]);\n  if (loading) {\n    return <div>Verificando cuenta...</div>;\n  }\n  return (\n    <div>\n      {data?.verifyAccount?.success && <h1>{t(\"successfulValidation\")}</h1>}\n      <Errors errors={data?.verifyAccount?.errors} />\n      <Link to=\"/profile\">\n        <Button>{t(\"backToProfile\")}</Button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Validate;\n","interface Node<T> {\n  node: T | null;\n}\n\ninterface Connection<T> {\n  edges: (Node<T> | null)[];\n}\n\nexport default function connectionToNodes<T>(\n  connection?: Connection<T> | null\n) {\n  return connection?.edges.map((edge) => edge!!.node!!) ?? [];\n}\n","import { App_app } from \"../api/types/App\";\nimport { BuildBuildStatus } from \"../api/types/globalTypes\";\nimport { MyAccount_me_apps_edges_node } from \"../api/types/MyAccount\";\nimport connectionToNodes from \"./connectionToNodes\";\n\nexport function getAppBuildState(\n  app?: MyAccount_me_apps_edges_node | App_app\n): BuildBuildStatus {\n  if (!app) {\n    return BuildBuildStatus.STALLED;\n  }\n  const nodes = connectionToNodes(app.builds);\n  return nodes[nodes.length - 1]?.buildStatus ?? BuildBuildStatus.STALLED;\n}\n","import { Tag } from \"antd\";\nimport React from \"react\";\nimport { BuildBuildStatus } from \"../../api/types/globalTypes\";\n\ninterface BuildStateProps {\n  state: BuildBuildStatus;\n}\n\nconst COLORS = {\n  STALLED: \"default\",\n  QUEUED: \"gold\",\n  GENERATING: \"cyan\",\n  UPLOADING: \"magenta\",\n  PUBLISHED: \"green\",\n  WAITING: \"orange\",\n};\n\nconst BuildState = ({ state }: BuildStateProps) => {\n  const color = COLORS[state];\n  return <Tag color={color}>{state}</Tag>;\n};\n\nexport default BuildState;\n","import React, { useState, useEffect, useRef, ReactNode } from \"react\";\nimport { Button, Popconfirm } from \"antd\";\nimport {\n  DeleteOutlined,\n  LoadingOutlined,\n  PlusOutlined,\n} from \"@ant-design/icons\";\n\nimport styles from \"./FileUpload.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\ntype ImageUploadProps = {\n  value?: string | Blob | null;\n  onChange?: (value: string | Blob) => void;\n  onDeleteClicked: () => void;\n};\n\ntype UploadButtonProps = {\n  loading: boolean;\n  children: ReactNode;\n};\n\ntype FilePreview = {\n  loading: boolean;\n  file?: string | ArrayBuffer | null;\n};\n\nconst UploadButton = ({ loading, children }: UploadButtonProps) => (\n  <>\n    {loading ? <LoadingOutlined /> : <PlusOutlined />}\n    <div className=\"ant-upload-text\">{children}</div>\n  </>\n);\n\nconst ImageUpload = ({\n  value: file,\n  onChange,\n  onDeleteClicked,\n}: ImageUploadProps) => {\n  const {t} = useTranslation(\"client\");\n  const [filePreview, setFilePreview] = useState<FilePreview>({\n    loading: false,\n  });\n  const uploadElement = useRef<HTMLLabelElement>(null);\n  const fileToPreview = (file: Blob) => {\n    const reader = new FileReader();\n    setFilePreview({\n      ...filePreview,\n      loading: true,\n    });\n    reader.onloadend = () => {\n      setFilePreview({\n        loading: false,\n        file: reader.result,\n      });\n    };\n    reader.readAsDataURL(file);\n  };\n\n  useEffect(() => {\n    if (file && typeof file !== \"string\") {\n      fileToPreview(file);\n    } else if (file && typeof file === \"string\") {\n      setFilePreview({ loading: false, file });\n    } else {\n      setFilePreview({ loading: false, file: null });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [file]);\n  return (\n    <>\n      <div>\n        <input\n          type=\"file\"\n          accept=\"image/png\"\n          onChange={({ target: { validity, files } }) => {\n            if (files && validity.valid) {\n              const [file] = Array.from(files);\n              onChange?.(file);\n            }\n          }}\n          hidden\n          id=\"fileupload\"\n        />\n        <label\n          ref={uploadElement}\n          className={styles.upload}\n          htmlFor=\"fileupload\"\n          onDragOver={(ev) => ev.preventDefault()}\n          onDragEnter={() => {\n            if (uploadElement.current) {\n              uploadElement.current.style.borderColor = \"#a8a8a8\";\n            }\n          }}\n          onDragLeave={() => {\n            if (uploadElement.current) {\n              uploadElement.current.style.borderColor = \"#d7d7d7\";\n            }\n          }}\n          onDrop={(ev) => {\n            ev.preventDefault();\n            if (ev.dataTransfer.items) {\n              // Use DataTransferItemList interface to access the file(s)\n              for (let i = 0; i < ev.dataTransfer.items.length; i++) {\n                // If dropped items aren't files, reject them\n                if (ev.dataTransfer.items[i].kind === \"file\") {\n                  const file = ev.dataTransfer.items[i].getAsFile();\n                  if (file) {\n                    onChange?.(file);\n                  }\n                }\n              }\n            } else {\n              // Use DataTransfer interface to access the file(s)\n              for (let i = 0; i < ev.dataTransfer.files.length; i++) {\n                const file = ev.dataTransfer.files[i];\n                onChange?.(file);\n              }\n            }\n          }}\n        >\n          {file ? (\n            <img\n              src={filePreview.file as string}\n              alt=\"preview upload\"\n              style={{\n                width: \"100%\",\n                height: \"100%\",\n                objectFit: \"contain\",\n              }}\n            />\n          ) : (\n          <UploadButton loading={filePreview.loading}>{t(\"upload\")}</UploadButton>\n          )}\n        </label>\n        {file && (\n          <Popconfirm\n            title={t(\"warnings.logo\")}\n            onConfirm={onDeleteClicked}\n          >\n            <Button icon={<DeleteOutlined />} danger onClick={onDeleteClicked}>\n              {t(\"deleteLogo\")}\n            </Button>\n          </Popconfirm>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default ImageUpload;\n","import React from \"react\";\nimport { Typography } from \"antd\";\nimport { getAppBuildState } from \"../../lib/appBuildState\";\n\nimport styles from \"./AppInfo.module.css\";\nimport BuildState from \"./BuildState\";\nimport ImageUpload from \"./FileUpload\";\nimport { StoreAppInput } from \"../../api/types/globalTypes\";\nimport { App_app } from \"../../api/types/App\";\n\nconst { Paragraph } = Typography;\n\ninterface AppInfoProps {\n  id?: string;\n  data: StoreAppInput;\n  app?: App_app;\n  onChange: (app: StoreAppInput) => void;\n}\n\nconst AppInfo = ({ app, id, data, onChange }: AppInfoProps) => {\n  return (\n    <div className={styles.info}>\n      <div className={styles.info__logo}>\n        <ImageUpload\n          value={data.logo}\n          onDeleteClicked={() => {\n            onChange({\n              ...data,\n              logo: null,\n            });\n          }}\n          onChange={(value) => {\n            onChange({\n              ...data,\n              logo: value,\n            });\n          }}\n        />\n      </div>\n      <h1 className={styles.info__appName}>\n        <Paragraph\n          editable={{\n            onChange(value) {\n              onChange({\n                ...data,\n                name: value,\n              });\n            },\n          }}\n        >\n          {data.name ?? \"(Sin nombre)\"}\n        </Paragraph>\n      </h1>\n      <h2 className={styles.info__appId}>{id}</h2>\n      <div className={styles.info__stores}>\n        {app?.storeLinks?.ios && (\n          <a className={styles.infoStores__link} href={app.storeLinks.ios}>\n            iOS\n          </a>\n        )}\n        {app?.storeLinks?.android && (\n          <a className={styles.infoStores__link} href={app.storeLinks.android}>\n            Android\n          </a>\n        )}\n      </div>\n      <div className={styles.info__state}>\n        <BuildState state={getAppBuildState(app)} />\n      </div>\n    </div>\n  );\n};\n\nexport default AppInfo;\n","import React from \"react\";\nimport { Tag } from \"antd\";\nimport { AccountAccountStatus } from \"../../api/types/globalTypes\";\n\ninterface UserStateProps {\n  state?: AccountAccountStatus;\n}\n\n// TODO: state -> COLORS\nconst COLORS = {\n  REGISTERED: \"default\",\n  WAITING_PAYMENT: \"orange\",\n  PAID_ACCOUNT: \"green\",\n  BANNED: \"red\",\n};\n\nconst UserState = ({ state }: UserStateProps) => {\n  const selector = state || AccountAccountStatus.REGISTERED;\n  const color = COLORS[selector];\n  return <Tag color={color}>{state}</Tag>;\n};\n\nexport default UserState;\n","import React, { ReactNode } from \"react\";\nimport { Descriptions, Typography } from \"antd\";\nimport UserState from \"./UserState\";\nimport { AccountBasicData } from \"../../api/types/AccountBasicData\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface ProfileInfoProps {\n  profile?: AccountBasicData | null;\n  action?: ReactNode;\n}\n\nconst ProfileInfo = ({ profile, action }: ProfileInfoProps) => {\n  const {t} = useTranslation()\n  return (\n    <Descriptions\n      title={\n        <Typography.Title level={2}>{t(\"profileInfo\")}</Typography.Title>\n      }\n      layout=\"vertical\"\n      size=\"small\"\n      bordered\n      extra={action}\n      column={{ md: 2, xs: 1, sm: 2, lg: 3 }}\n    >\n      {profile?.username && (\n        <Descriptions.Item label={t(\"username\")}>\n          {profile.username}\n        </Descriptions.Item>\n      )}\n      {profile?.email && (\n        <Descriptions.Item label={t(\"email\")}>{profile.email}</Descriptions.Item>\n      )}\n      {profile?.accountStatus && (\n        <Descriptions.Item label={t(\"accountStatus\")}>\n          <UserState state={profile.accountStatus} />\n        </Descriptions.Item>\n      )}\n    </Descriptions>\n  );\n};\n\nexport default ProfileInfo;\n","import React from \"react\";\n\nimport styles from \"./TemplatePreview.module.css\";\n\ninterface TemplatePreviewProps {\n  name: string;\n  image: string;\n}\n\nconst TemplatePreview = ({ name, image }: TemplatePreviewProps) => {\n  return (\n    <div className={styles.container}>\n      <img\n        className={styles.image}\n        src={image}\n        alt={`Template preview for ${name}`}\n      />\n      <span className={styles.name}>{name}</span>\n    </div>\n  );\n};\n\nexport default TemplatePreview;\n","import React, { ReactNode } from \"react\";\nimport { Popconfirm, Typography } from \"antd\";\n\nimport styles from \"./TitleWithAction.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title } = Typography;\n\ninterface TitleWithActionProps {\n  title: string;\n  action?: {\n    action: () => void;\n    label: ReactNode;\n    needsConfirmation?: boolean;\n    confirmationTitle?: ReactNode;\n  };\n}\n\nconst TitleWithAction = ({ title, action }: TitleWithActionProps) => {\n  const { t } = useTranslation(\"client\");\n  return (\n    <div className={styles.container}>\n      <Title level={2}>{title}</Title>\n      {action &&\n        (action.needsConfirmation ? (\n          <Popconfirm\n            placement=\"bottomRight\"\n            title={action.confirmationTitle || t(\"warnings.action\")}\n            onConfirm={action.action}\n          >\n            <button className={styles.action}>{action.label}</button>\n          </Popconfirm>\n        ) : (\n          <button className={styles.action} onClick={action.action}>\n            {action.label}\n          </button>\n        ))}\n    </div>\n  );\n};\n\nexport default TitleWithAction;\n","import { Button } from \"antd\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nimport styles from \"./Placeholder.module.css\";\n\ninterface PlaceholderProps {\n  cta: { title: string; link: string };\n  claim: string;\n  image?: string;\n}\n\nconst Placeholder = ({ claim, image, cta }: PlaceholderProps) => {\n  return (\n    <div className={styles.container}>\n      <h2 className={styles.title}>{claim}</h2>\n      {image && <img src={styles.image} alt=\"claim\" />}\n      <Link to={cta.link}>\n        <Button type=\"primary\">{cta.title}</Button>\n      </Link>\n    </div>\n  );\n};\n\nexport default Placeholder;\n","import { useMutation, useQuery } from \"@apollo/client\";\nimport { Button, Collapse, Form, Input } from \"antd\";\nimport Title from \"antd/lib/typography/Title\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { MODIFY_APP_PAYMENT } from \"../../api/mutations\";\nimport { APP_PAYMENTS } from \"../../api/queries\";\nimport { AppPayments, AppPaymentsVariables } from \"../../api/types/AppPayments\";\nimport {\n  ModifyAppPayment,\n  ModifyAppPaymentVariables,\n} from \"../../api/types/ModifyAppPayment\";\nimport Loading from \"../atoms/Loading\";\n\ninterface AppPaymentProps {\n  appId: string;\n}\n\nconst AppPayment = ({ appId }: AppPaymentProps) => {\n  const { t } = useTranslation(\"client\");\n  const { data, loading } = useQuery<AppPayments, AppPaymentsVariables>(\n    APP_PAYMENTS,\n    {\n      variables: {\n        id: appId,\n      },\n    }\n  );\n  const [updatePayment, { data: mutationData }] = useMutation<\n    ModifyAppPayment,\n    ModifyAppPaymentVariables\n  >(MODIFY_APP_PAYMENT);\n  if (loading) {\n    return <Loading />;\n  }\n  return (\n    <>\n      <Title level={2}>{t(\"paymentMethod\")}</Title>\n      <Collapse>\n        <Collapse.Panel key=\"stripe\" header=\"Stripe\">\n          <Form\n            initialValues={data?.app?.paymentMethod ?? undefined}\n            onFinish={(values) => {\n              updatePayment({\n                variables: {\n                  data: values,\n                  appId,\n                },\n              });\n            }}\n          >\n            <Form.Item name=\"stripeTestPublic\" label={t(\"testPublicKey\")}>\n              <Input.Password />\n            </Form.Item>\n            <Form.Item name=\"stripeTestSecret\" label={t(\"testPrivateKey\")}>\n              <Input.Password />\n            </Form.Item>\n            <Form.Item name=\"stripeProdPublic\" label={t(\"prodPublicKey\")}>\n              <Input.Password />\n            </Form.Item>\n            <Form.Item name=\"stripeProdSecret\" label={t(\"prodPrivateKey\")}>\n              <Input.Password />\n            </Form.Item>\n            <Button htmlType=\"submit\">{t(\"updateStripeKeys\")}</Button>\n            {mutationData?.modifyPaymentMethodApp?.error && (\n              <p>{mutationData.modifyPaymentMethodApp.error}</p>\n            )}\n          </Form>\n        </Collapse.Panel>\n      </Collapse>\n    </>\n  );\n};\n\nexport default AppPayment;\n","import { Card, Col, Row } from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLazyQuery } from \"@apollo/client\";\nimport { APP } from \"../../api/queries\";\nimport { App as IApp, AppVariables, App_app } from \"../../api/types/App\";\nimport Loading from \"../../components/atoms/Loading\";\nimport { TitleWithAction, AppInfo } from \"../../components/molecules\";\nimport { TemplateSelector, ColorPicker } from \"../../components/organisms\";\nimport AppPreview from \"../../components/organisms/AppPreview\";\nimport { StoreAppInput } from \"../../api/types/globalTypes\";\nimport AppPayment from \"../../components/organisms/AppPayment\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface AppParamTypes {\n  appId?: string;\n}\n\nfunction appsAreEqual(state: StoreAppInput, app?: App_app | null): boolean {\n  if (!app) {\n    return false;\n  }\n  return (\n    app.color?.color === state.color?.color &&\n    app.color?.text === state.color?.text &&\n    app.name === state.name &&\n    app.template?.id === state.template &&\n    app.logo === state.logo\n  );\n}\n\nconst baseApp: StoreAppInput = {\n  template: \"VGVtcGxhdGVUeXBlOjE=\",\n  name: \"(no name)\",\n  color: { color: \"#0099cc\", text: \"white\" },\n  logo: null,\n};\n\nconst App = () => {\n  const { appId } = useParams<AppParamTypes>();\n  const [state, setState] = useState<StoreAppInput>(baseApp);\n  const { t } = useTranslation(\"client\");\n  const [getAppById, { loading, data }] = useLazyQuery<IApp, AppVariables>(APP);\n  useEffect(() => {\n    if (data?.app) {\n      setState({\n        template: data.app.template?.id,\n        name: data.app.name,\n        color: {\n          color: data.app.color?.color ?? baseApp.color?.color,\n          text: data.app.color?.text ?? baseApp.color?.text,\n        },\n        logo: data.app.logo,\n      });\n    }\n  }, [data]);\n  useEffect(() => {\n    if (appId) {\n      getAppById({ variables: { id: appId } });\n    }\n  }, [appId, getAppById]);\n  if (!state || loading) return <Loading />;\n  return (\n    <div>\n      <Row gutter={20}>\n        <Col span={12}>\n          <Row>\n            <AppInfo\n              data={state}\n              id={data?.app?.id}\n              onChange={(app) => setState(app)}\n              app={data?.app ?? undefined}\n            />\n          </Row>\n          <Row>\n            <Col span={24}>\n              <Card>\n                <TitleWithAction title={t(\"style\")} />\n                <TemplateSelector\n                  value={state.template!!}\n                  onChange={(selected) => {\n                    setState((val) => ({\n                      ...val,\n                      template: selected,\n                    }));\n                  }}\n                />\n                <ColorPicker\n                  value={state.color!!}\n                  onChange={(selected) => {\n                    setState((val) => ({\n                      ...val,\n                      color: selected,\n                    }));\n                  }}\n                />\n                <AppPayment appId={appId!!} />\n              </Card>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={12}>\n          <Card>\n            <AppPreview\n              id={data?.app?.id!!}\n              app={state}\n              hasChanged={!appsAreEqual(state, data?.app)}\n            />\n          </Card>\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport { CardElement } from \"@stripe/react-stripe-js\";\nimport { Card, Col, Row } from \"antd\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface CardSectionProps {}\n\nconst CARD_ELEMENT_OPTIONS = {\n  style: {\n    base: {\n      color: \"#32325d\",\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\n      fontSmoothing: \"antialiased\",\n      fontSize: \"16px\",\n      \"::placeholder\": {\n        color: \"#aab7c4\",\n      },\n    },\n    invalid: {\n      color: \"#fa755a\",\n      iconColor: \"#fa755a\",\n    },\n  },\n};\n\nconst CardSection = () => {\n  const { t } = useTranslation(\"client\");\n  return (\n    <Row>\n      <Col span={12}>\n        <label>\n          {t(\"cardDetails\")}\n          <Card>\n            <CardElement options={CARD_ELEMENT_OPTIONS} />\n          </Card>\n        </label>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CardSection;\n","import React, { useState } from \"react\";\nimport { Button, Card, Col, Input, Row, Typography, Form } from \"antd\";\nimport {\n  CardElement,\n  Elements,\n  useElements,\n  useStripe,\n} from \"@stripe/react-stripe-js\";\nimport CardSection from \"../molecules/CardSection\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title, Text } = Typography;\n\nconst stripePromise = loadStripe(\"pk_test_RG1KlTBaXWs8pCamCoLixIIu00FTwuG937\");\n\ninterface CreateCreditCardProps {\n  onCreated: (paymentMethodId: string) => void;\n}\n\nconst CreateCreditCardContainer = (props: CreateCreditCardProps) => {\n  return (\n    <Elements stripe={stripePromise}>\n      <CreateCreditCard {...props} />\n    </Elements>\n  );\n};\n\nconst CreateCreditCard = ({ onCreated }: CreateCreditCardProps) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const [error, setError] = useState<string>()\n  const { t } = useTranslation([\"translation\", \"client\"]);\n  return (\n    <Form\n      validateMessages={{ required: \"El campo '${label}' es obligatorio\" }} // eslint-disable-line no-template-curly-in-string\n      onFinish={async (values) => {\n        if (!stripe || !elements) {\n          return;\n        }\n        const cardElement = elements.getElement(CardElement);\n        if (!cardElement) {\n          return;\n        }\n        const { error, paymentMethod } = await stripe.createPaymentMethod({\n          type: \"card\",\n          card: cardElement,\n          billing_details: {\n            address: {\n              city: values.city,\n              country: values.country,\n              line1: values.direction,\n              state: values.state,\n            },\n            email: values.email,\n            name: `${values.name} ${values.surname}`,\n          },\n        });\n\n        if (error) {\n          console.log(\"[createPaymentMethod error]\", error);\n          setError(error.message);\n        } else {\n          setError(undefined);\n          const paymentMethodId = paymentMethod?.id;\n          if (!paymentMethodId) {\n            return;\n          }\n          onCreated(paymentMethodId);\n        }\n      }}\n    >\n      <Row gutter={[20, 20]}>\n        <Col span={24}>\n          <Row gutter={[20, 20]}>\n            <Col span={24}>\n              <Card>\n                <Title level={2}>{t(\"client:billingDirection\")}</Title>\n                <Row gutter={[15, 15]}>\n                  <Col md={12} sm={24}>\n                    <Form.Item\n                      name=\"name\"\n                      rules={[{ required: true }]}\n                      label={t(\"name\")}\n                    >\n                      <Input placeholder={t(\"name\")} />\n                    </Form.Item>\n                  </Col>\n                  <Col md={12} sm={24}>\n                    <Form.Item\n                      name=\"surname\"\n                      rules={[{ required: true }]}\n                      label={t(\"surname\")}\n                    >\n                      <Input placeholder={t(\"surname\")} />\n                    </Form.Item>\n                  </Col>\n                </Row>\n                <Row gutter={[15, 15]}>\n                  <Col md={12} sm={24}>\n                    <Form.Item\n                      name=\"email\"\n                      rules={[{ required: true }]}\n                      label={t(\"email\")}\n                    >\n                      <Input placeholder={t(\"email\")} type=\"email\" />\n                    </Form.Item>\n                  </Col>\n                  <Col md={12} sm={24}>\n                    <Form.Item\n                      name=\"direction\"\n                      rules={[{ required: true }]}\n                      label={t(\"location\")}\n                    >\n                      <Input placeholder={t(\"location\")} />\n                    </Form.Item>\n                  </Col>\n                </Row>\n                <Row gutter={[15, 15]}>\n                  <Col md={12} sm={24}>\n                    <Form.Item\n                      name=\"city\"\n                      rules={[{ required: true }]}\n                      label={t(\"city\")}\n                    >\n                      <Input placeholder={t(\"city\")} />\n                    </Form.Item>\n                  </Col>\n                  <Col md={12} sm={24}>\n                    <Form.Item\n                      name=\"state\"\n                      rules={[{ required: true }]}\n                      label={t(\"province\")}\n                    >\n                      <Input placeholder={t(\"province\")} />\n                    </Form.Item>\n                  </Col>\n                </Row>\n                <Row gutter={[15, 15]}>\n                  <Col md={12} sm={24}>\n                    {/*TODO: Country Select */}\n                    <Form.Item\n                      name=\"country\"\n                      rules={[{ required: true }]}\n                      label={t(\"country\")}\n                    >\n                      <Input placeholder={t(\"country\")} />\n                    </Form.Item>\n                  </Col>\n                  <Col md={12} sm={24}>\n                    <Form.Item name=\"documentId\" label={t(\"documentId\")}>\n                      <Input placeholder={t(\"documentId\")} />\n                    </Form.Item>\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n            <Col span={24}>\n              <Card>\n                <Title level={2}>{t(\"client:paymentMethod\")}</Title>\n                <CardSection />\n              </Card>\n            </Col>\n            <Col span={24}>\n              {error && <p><Text type=\"danger\">{error}</Text></p>}\n              <Button htmlType=\"submit\" type=\"primary\" size=\"large\">\n                {t(\"client:createPaymentMethod\")}\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Form>\n  );\n};\n\nexport default CreateCreditCardContainer;\n","import React, { useState } from \"react\";\nimport { Button, Card, Col, Row, Typography, message } from \"antd\";\nimport { useMutation } from \"@apollo/client\";\nimport { useHistory } from \"react-router-dom\";\nimport { PlanInterval } from \"../../api/types/globalTypes\";\nimport { SUBSCRIBE } from \"../../api/mutations\";\nimport { Subscribe, SubscribeVariables } from \"../../api/types/Subscribe\";\nimport Errors from \"./Errors\";\nimport { CheckoutLocationState } from \"../../pages/client/Checkout\";\nimport CreateCreditCard from \"../organisms/CreateCreateCard\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title, Text } = Typography;\n\ninterface CheckoutFormProps {\n  plan: CheckoutLocationState;\n}\n\nconst CheckoutForm = ({ plan }: CheckoutFormProps) => {\n  const history = useHistory();\n  const [paymentMethodId, setPaymentMethodId] = useState<string>();\n  const [createSubscription, { data }] = useMutation<\n    Subscribe,\n    SubscribeVariables\n  >(SUBSCRIBE);\n  const {t} = useTranslation([\"client\", \"translation\"])\n  return (\n    <Row gutter={[20,       20]}>\n      <Col sm={24} md={14}>\n        <CreateCreditCard onCreated={setPaymentMethodId}></CreateCreditCard>\n      </Col>\n      <Col sm={24} md={10}>\n        <Row gutter={[20, 20]}>\n          <Col span={24}>\n            <Card>\n              <Title level={2}>{t(\"yourPayment\")}</Title>\n              <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n                <Text type=\"secondary\">{plan.name}</Text>\n                <Text type=\"secondary\">\n                  {t(\"subscriptionResume\", {amount: plan.amount, interval: plan.interval === PlanInterval.MONTH ? t(\"translation:month\") : t(\"translation:year\")})}\n                </Text>\n              </div>\n            </Card>\n          </Col>\n          <Col span={24}>\n            {paymentMethodId && (\n              <Button\n                onClick={() => {\n                  createSubscription({\n                    variables: {\n                      paymentMethodId,\n                      planId: plan.stripeId!!,\n                    },\n                  }).then(({ data }) => {\n                    if (data?.subscribe?.ok) {\n                      history.replace(\"/profile\");\n                    } else {\n                      message.error(data?.subscribe?.error);\n                    }\n                  });\n                }}\n                type=\"primary\"\n                size=\"large\"\n              >\n                {t(\"translation:confirm\")}\n              </Button>\n            )}\n          </Col>\n          <Col span={24}>\n            <Errors\n              errors={{\n                nonFieldErrors: data?.subscribe?.error\n                  ? [{ message: data?.subscribe?.error, code: \"error\" }]\n                  : undefined,\n              }}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  );\n};\n\nexport default CheckoutForm;\n","import React from \"react\";\nimport { Redirect, useLocation } from \"react-router-dom\";\nimport { Plans_plans_edges_node_planSet_edges_node } from \"../../api/types/Plans\";\nimport CheckoutForm from \"../../components/molecules/CheckoutForm\";\n\n\nexport interface CheckoutLocationState\n  extends Plans_plans_edges_node_planSet_edges_node {\n  name: string;\n}\n\nconst Checkout = () => {\n  const { state: plan } = useLocation<CheckoutLocationState>();\n  if (!plan) {\n    return <Redirect to={\"/pay\"} />;\n  }\n  return (\n      <CheckoutForm plan={plan} />\n  );\n};\n\nexport default Checkout;\n","import React from \"react\";\nimport { Button, Card, Col, Input, Row, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport ChangePassword from \"../../components/organisms/ChangePassword\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Title } = Typography;\n\nconst EditProfile = () => {\n  const { t } = useTranslation([\"translation\", \"client\"]);\n  return (\n    <>\n      <Row gutter={[20, 20]}>\n        <Col span={24}>\n          <Card>\n            <Title level={2}>{t(\"client:personalData\")}</Title>\n            <Row gutter={[15, 15]}>\n              <Col md={12} sm={24}>\n                <Input placeholder={t(\"name\")} />\n              </Col>\n              <Col md={12} sm={24}>\n                <Input placeholder={t(\"surname\")} />\n              </Col>\n            </Row>\n            <Row gutter={[15, 15]}>\n              <Col md={12} sm={24}>\n                <Input placeholder={t(\"email\")} />\n              </Col>\n              <Col md={12} sm={24}>\n                <Input placeholder={t(\"location\")} />\n              </Col>\n            </Row>\n            <Row gutter={[15, 15]}>\n              <Col md={12} sm={24}>\n                <Input placeholder={t(\"city\")} />\n              </Col>\n              <Col md={12} sm={24}>\n                <Input placeholder={t(\"country\")} />\n              </Col>\n            </Row>\n            <Row gutter={[15, 15]}>\n              <Col md={12} sm={24}>\n                <Input placeholder={t(\"billingDirection\")} />\n              </Col>\n              <Col md={12} sm={24}>\n                <Input placeholder={t(\"documentId\")} />\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card>\n            <Title level={2}>{t(\"client:paymentMethod\")}</Title>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Card>\n            <ChangePassword />\n          </Card>\n        </Col>\n      </Row>\n      <Row>\n        <Link to=\"/profile\">\n          <Button danger>{t(\"cancel\")}</Button>\n        </Link>\n      </Row>\n    </>\n  );\n};\n\nexport default EditProfile;\n","import React, { useCallback, useEffect } from \"react\";\nimport { ApolloCache, FetchResult, useMutation } from \"@apollo/client\";\nimport { Button, Input, Form, Card } from \"antd\";\nimport { Redirect } from \"react-router-dom\";\nimport { CREATE_APP } from \"../../api/mutations\";\nimport { CreateApp, CreateAppVariables } from \"../../api/types/CreateApp\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAuth } from \"../../lib/auth\";\n\nconst NewApp = () => {\n  const storeInfo: { link: string; name: string } | undefined = (window as any)\n    .__YOWNES_STORE_INFO__;\n  const { t } = useTranslation(\"client\");\n  const { user } = useAuth();\n  const [create, { data, loading }] = useMutation<\n    CreateApp,\n    CreateAppVariables\n  >(CREATE_APP);\n\n  const update = useCallback((cache: ApolloCache<CreateApp>,\n    { data }: FetchResult<CreateApp, Record<string, any>, Record<string, any>>) => {\n    if (data?.createApp?.ok) {\n      const me = cache.identify({ ...user });\n      const node = cache.identify({ ...data.createApp?.storeApp });\n      cache.modify({\n        id: me,\n        fields: {\n          apps(existing) {\n            return {\n              edges: [...existing.edges, { node }],\n            };\n          },\n        },\n      });\n    }\n  }, [user])\n\n  useEffect(() => {\n    if (storeInfo) {\n      create({\n        variables: {\n          data: {\n            apiLink: storeInfo.link,\n            name: storeInfo.name,\n          },\n        },\n        update,\n      });\n    }\n  }, [storeInfo, create, update]);\n  if (data?.createApp?.ok) {\n    return <Redirect to={`/app/${data.createApp.storeApp?.id}`} />;\n  }\n  return (\n    <Card>\n      <Form\n        initialValues={{\n          name: storeInfo?.name,\n          apiLink: storeInfo?.link,\n        }}\n        onFinish={(values) => {\n          create({\n            variables: { data: { apiLink: values.apiLink, name: values.name } },\n            update,\n          });\n        }}\n      >\n        <Form.Item\n          name=\"name\"\n          label={t(\"appName\")}\n          rules={[{ required: true }]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"apiLink\"\n          label={t(\"storeLocation\")}\n          rules={[{ required: true }]}\n        >\n          <Input disabled={Boolean(storeInfo?.link)} type=\"url\" />\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            disabled={loading}\n            loading={loading}\n          >\n            {loading ? t(\"checking\") : t(\"check\")}\n          </Button>\n        </Form.Item>\n      </Form>\n      {storeInfo?.link && !data?.createApp?.ok && (\n        <div>{t(\"checkLocation\")}</div>\n      )}\n      {!storeInfo?.link && (\n        <div>\n          <h2>{t(\"installInstructions.title\")}</h2>\n          <p>{t(\"installInstructions.description\")}</p>\n        </div>\n      )}\n      {data?.createApp?.error && <span>{data.createApp.error}</span>}\n    </Card>\n  );\n};\n\nexport default NewApp;\n","import React from \"react\";\nimport { Button, Typography } from \"antd\";\nimport { Link } from \"react-router-dom\";\nimport { PlanInterval } from \"../../api/types/globalTypes\";\nimport { CheckoutLocationState } from \"../../pages/client/Checkout\";\n\nimport styles from \"./RateSelection.module.css\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Text, Title } = Typography;\n\ninterface RateSelectionProps {\n  subtitle?: string;\n  title: string;\n  plan: CheckoutLocationState;\n}\n\nconst RateSelection = ({\n  subtitle,\n  title,\n  plan,\n}: RateSelectionProps) => {\n  const { t } = useTranslation();\n  return (\n    <div className={styles.container}>\n      <Text>{subtitle}</Text>\n      <Title level={2}>{title}</Title>\n      <Title level={3}>\n        <Text strong>{plan.amount}</Text>€/\n        {plan.interval === PlanInterval.MONTH ? t(\"month\") : t(\"year\")}\n      </Title>\n      <Link to={{ pathname: `/checkout`, state: plan }}>\n        <Button type=\"primary\">{t(\"select\")}</Button>\n      </Link>\n      <Text type=\"secondary\" style={{ display: \"block\" }}>\n        {t(\"priceWithTaxes\")}\n      </Text>\n    </div>\n  );\n};\n\nexport default RateSelection;\n","import { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { useQuery } from \"@apollo/client\";\nimport { Switch, Table } from \"antd\";\nimport React, { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { PLANS } from \"../../api/queries\";\nimport { PlanInterval } from \"../../api/types/globalTypes\";\nimport {\n  Plans,\n  Plans_features,\n  Plans_plans_edges_node_planSet_edges_node,\n} from \"../../api/types/Plans\";\nimport connectionToNodes from \"../../lib/connectionToNodes\";\nimport { CheckoutLocationState } from \"../../pages/client/Checkout\";\nimport Loading from \"../atoms/Loading\";\nimport RateSelection from \"../molecules/RateSelection\";\n\nexport interface Rate {\n  title: string;\n  subtitle?: string;\n  price: number;\n  id: string;\n  features: string[];\n}\n\nexport interface Feature {\n  title: string;\n  id: string;\n}\n\nfunction selectPlan(\n  plans: Plans_plans_edges_node_planSet_edges_node[],\n  interval: PlanInterval,\n  name: string\n): CheckoutLocationState {\n  const plan = plans\n    .filter((plan) => plan.active)\n    .find((plan) => plan.interval === interval);\n  if (plan) {\n    return {\n      ...plan,\n      name,\n    };\n  } else {\n    return {\n      __typename: \"StripePlanType\",\n      amount: 0,\n      id: \"-1\",\n      stripeId: \"-1\",\n      interval: PlanInterval.MONTH,\n      name,\n      active: true,\n    };\n  }\n}\n\nfunction notNull(\n  value: Plans_features | null,\n  index: number,\n  array: (Plans_features | null)[]\n): value is Plans_features {\n  return (value as Plans_features).id !== undefined;\n}\n\nconst RateTable = () => {\n  const { t } = useTranslation(\"client\");\n  const { data, loading } = useQuery<Plans>(PLANS);\n  const [interval, setInterval] = useState(PlanInterval.MONTH);\n  if (loading) return <Loading />;\n  const nodes = connectionToNodes(data?.plans);\n  const dataSource = data?.features\n    ?.filter<Plans_features>(notNull)\n    .map((feat) => {\n      const ids = nodes\n        .map((node) => ({\n          [node.id]: node.features.map((f) => f.id).includes(feat.id),\n        }))\n        .reduce((a, b) => ({ ...a, ...b }), {});\n      return {\n        ...feat,\n        ...ids,\n      };\n    });\n  return (\n    <>\n      <Table\n        columns={[\n          {\n            title: (\n              <>\n                <span>{t(\"monthlyPayment\")} </span>\n                <Switch\n                  checked={interval === PlanInterval.MONTH}\n                  onChange={(checked) => {\n                    setInterval(\n                      checked ? PlanInterval.MONTH : PlanInterval.YEAR\n                    );\n                  }}\n                />\n              </>\n            ),\n            dataIndex: \"name\",\n            fixed: \"left\",\n          },\n          ...nodes.map((rate, i) => ({\n            title: (\n              <RateSelection\n                key={rate.id}\n                title={rate.name}\n                subtitle={rate.description ?? \"-\"}\n                plan={selectPlan(\n                  connectionToNodes(rate.planSet),\n                  interval,\n                  rate.name\n                )}\n              />\n            ),\n            key: rate.id,\n            dataIndex: rate.id,\n            render(text: any, record: Plans_features, index: number) {\n              return text ? (\n                <CheckOutlined style={{ fontSize: 20, color: \"#00ec93\" }} />\n              ) : (\n                <CloseOutlined style={{ fontSize: 20, color: \"#dd0000\" }} />\n              );\n            },\n          })),\n        ]}\n        pagination={false}\n        scroll={{ x: 1500, y: \"40vh\" }}\n        dataSource={dataSource}\n      />\n    </>\n  );\n};\n\nexport default RateTable;\n","import React from \"react\";\nimport { Card } from \"antd\";\nimport RateTable from \"../../components/organisms/RateTable\";\n\nconst Pay = () => {\n  return (\n    <Card>\n      <RateTable />\n    </Card>\n  );\n};\n\nexport default Pay;\n","import React from \"react\";\n\nimport styles from \"./CreditCard.module.css\";\n\ninterface CreditCardProps {\n  data: string;\n  billing: string;\n}\n\ninterface ICreditCardStripe {\n  brand: \"visa\" | \"maestro\" | \"mastercard\";\n  checks: {\n    address_line1_check?: string;\n    address_postal_code_check?: string;\n    cvc_check?: string;\n  };\n  exp_month: number;\n  exp_year: number;\n  last4: string;\n}\n\ninterface IBillingDetailsStripe {\n  address: {\n    city: string;\n    country: string;\n    line1: string;\n    postal_code: string;\n    state: string;\n  };\n  email: string;\n  name: string;\n}\n\nconst CARDS = {\n  visa: {\n    darkColor: styles.limedark,\n    lightColor: styles.lime,\n    icon: `<svg version=\"1.1\" id=\"Layer_1\" xmlns:sketch=\"http://www.bohemiancoding.com/sketch/ns\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" width=\"750px\" height=\"471px\" viewBox=\"0 0 750 471\" enable-background=\"new 0 0 750 471\" xml:space=\"preserve\"><title>Slice 1</title><desc>Created with Sketch.</desc><g id=\"visa\" sketch:type=\"MSLayerGroup\"><path id=\"Shape\" sketch:type=\"MSShapeGroup\" fill=\"#0E4595\" d=\"M278.198,334.228l33.36-195.763h53.358l-33.384,195.763H278.198L278.198,334.228z\"/><path id=\"path13\" sketch:type=\"MSShapeGroup\" fill=\"#0E4595\" d=\"M524.307,142.687c-10.57-3.966-27.135-8.222-47.822-8.222c-52.725,0-89.863,26.551-90.18,64.604c-0.297,28.129,26.514,43.821,46.754,53.185c20.77,9.597,27.752,15.716,27.652,24.283c-0.133,13.123-16.586,19.116-31.924,19.116c-21.355,0-32.701-2.967-50.225-10.274l-6.877-3.112l-7.488,43.823c12.463,5.466,35.508,10.199,59.438,10.445c56.09,0,92.502-26.248,92.916-66.884c0.199-22.27-14.016-39.216-44.801-53.188c-18.65-9.056-30.072-15.099-29.951-24.269c0-8.137,9.668-16.838,30.559-16.838c17.447-0.271,30.088,3.534,39.936,7.5l4.781,2.259L524.307,142.687\"/><path id=\"Path\" sketch:type=\"MSShapeGroup\" fill=\"#0E4595\" d=\"M661.615,138.464h-41.23c-12.773,0-22.332,3.486-27.941,16.234l-79.244,179.402h56.031c0,0,9.16-24.121,11.232-29.418c6.123,0,60.555,0.084,68.336,0.084c1.596,6.854,6.492,29.334,6.492,29.334h49.512L661.615,138.464L661.615,138.464z M596.198,264.872c4.414-11.279,21.26-54.724,21.26-54.724c-0.314,0.521,4.381-11.334,7.074-18.684l3.607,16.878c0,0,10.217,46.729,12.352,56.527h-44.293V264.872L596.198,264.872z\"/><path id=\"path16\" sketch:type=\"MSShapeGroup\" fill=\"#0E4595\" d=\"M232.903,138.464L180.664,271.96l-5.565-27.129c-9.726-31.274-40.025-65.157-73.898-82.12l47.767,171.204l56.455-0.064l84.004-195.386L232.903,138.464\"/><path id=\"path18\" sketch:type=\"MSShapeGroup\" fill=\"#F2AE14\" d=\"M131.92,138.464H45.879l-0.682,4.073c66.939,16.204,111.232,55.363,129.618,102.415l-18.709-89.96C152.877,142.596,143.509,138.896,131.92,138.464\"/></g></svg>`,\n  },\n  maestro: {\n    darkColor: styles.yellowdark,\n    lightColor: styles.yellow,\n    icon: `<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"482.6\" height=\"374.31\" viewBox=\"0 0 482.6 374.31\"> <title>maestro</title> <g> <path d=\"M278.8,421.77V397c0-9.35-6-15.64-15.55-15.72-5-.08-10.26,1.49-13.9,7-2.73-4.38-7-7-13.07-7a13.08,13.08,0,0,0-11.58,5.87v-4.88h-8.61v39.55h8.69V399.85c0-6.87,3.81-10.51,9.68-10.51,5.71,0,8.61,3.72,8.61,10.42v22h8.69V399.85c0-6.87,4-10.51,9.68-10.51,5.87,0,8.69,3.72,8.69,10.42v22ZM327.28,402V382.23h-8.61V387c-2.73-3.56-6.87-5.79-12.49-5.79-11.09,0-19.77,8.69-19.77,20.77s8.69,20.77,19.77,20.77c5.63,0,9.76-2.23,12.49-5.79v4.8h8.61Zm-32,0c0-6.95,4.55-12.66,12-12.66,7.12,0,11.91,5.46,11.91,12.66s-4.8,12.66-11.91,12.66C299.81,414.66,295.26,408.95,295.26,402ZM511.4,381.19a22.29,22.29,0,0,1,8.49,1.59,20.71,20.71,0,0,1,6.75,4.38,20,20,0,0,1,4.46,6.59,22,22,0,0,1,0,16.52,20,20,0,0,1-4.46,6.59,20.69,20.69,0,0,1-6.75,4.38,23.43,23.43,0,0,1-17,0,20.47,20.47,0,0,1-6.73-4.38,20.21,20.21,0,0,1-4.44-6.59,22,22,0,0,1,0-16.52,20.23,20.23,0,0,1,4.44-6.59,20.48,20.48,0,0,1,6.73-4.38A22.29,22.29,0,0,1,511.4,381.19Zm0,8.14a12.84,12.84,0,0,0-4.91.93,11.62,11.62,0,0,0-3.92,2.6,12.13,12.13,0,0,0-2.6,4,14.39,14.39,0,0,0,0,10.28,12.11,12.11,0,0,0,2.6,4,11.62,11.62,0,0,0,3.92,2.6,13.46,13.46,0,0,0,9.83,0,11.86,11.86,0,0,0,3.94-2.6,12,12,0,0,0,2.62-4,14.39,14.39,0,0,0,0-10.28,12,12,0,0,0-2.62-4,11.86,11.86,0,0,0-3.94-2.6A12.84,12.84,0,0,0,511.4,389.32ZM374.1,402c-.08-12.33-7.69-20.77-18.78-20.77-11.58,0-19.69,8.44-19.69,20.77,0,12.58,8.44,20.77,20.27,20.77,6,0,11.42-1.49,16.22-5.54l-4.22-6.37A18.84,18.84,0,0,1,356.4,415c-5.54,0-10.59-2.56-11.83-9.68h29.37C374,404.23,374.1,403.16,374.1,402Zm-29.45-3.47c.91-5.71,4.38-9.6,10.51-9.6,5.54,0,9.1,3.47,10,9.6Zm65.69-6.2A25.49,25.49,0,0,0,398,388.93c-4.72,0-7.53,1.74-7.53,4.63,0,2.65,3,3.39,6.7,3.89l4.05.58c8.61,1.24,13.82,4.88,13.82,11.83,0,7.53-6.62,12.91-18,12.91-6.45,0-12.41-1.66-17.13-5.13l4.05-6.7a21.07,21.07,0,0,0,13.16,4.14c5.87,0,9-1.74,9-4.8,0-2.23-2.23-3.47-6.95-4.14l-4.05-.58c-8.85-1.24-13.65-5.21-13.65-11.67,0-7.86,6.45-12.66,16.46-12.66,6.29,0,12,1.41,16.13,4.14Zm41.35-2.23H437.62V408c0,4,1.41,6.62,5.71,6.62a15.89,15.89,0,0,0,7.61-2.23l2.48,7.36a20.22,20.22,0,0,1-10.76,3.06c-10.18,0-13.73-5.46-13.73-14.65v-18h-8v-7.86h8v-12h8.69v12h14.06Zm29.78-8.85a18.38,18.38,0,0,1,6.12,1.08l-2.65,8.11a14,14,0,0,0-5.38-1c-5.63,0-8.44,3.64-8.44,10.18v22.17h-8.6V382.23H471V387a11.66,11.66,0,0,1,10.42-5.79Z\" transform=\"translate(-132.9 -48.5)\"/> <g id=\"_Group_\" data-name=\"&lt;Group&gt;\"> <rect x=\"176.05\" y=\"31.89\" width=\"130.5\" height=\"234.51\" fill=\"#7673c0\"/> <path id=\"_Path_\" data-name=\"&lt;Path&gt;\" d=\"M317.24,197.64a148.88,148.88,0,0,1,57-117.26,149.14,149.14,0,1,0,0,234.51A148.88,148.88,0,0,1,317.24,197.64Z\" transform=\"translate(-132.9 -48.5)\" fill=\"#eb001b\"/> <path d=\"M615.5,197.64A149.14,149.14,0,0,1,374.2,314.9a149.16,149.16,0,0,0,0-234.51A149.14,149.14,0,0,1,615.5,197.64Z\" transform=\"translate(-132.9 -48.5)\" fill=\"#00a1df\"/> </g> </g></svg>`,\n  },\n  mastercard: {\n    darkColor: styles.lightbluedark,\n    lightColor: styles.lightblue,\n    icon: `<svg id=\"Layer_1\" data-name=\"Layer 1\" xmlns=\"http://www.w3.org/2000/svg\" width=\"482.51\" height=\"374\" viewBox=\"0 0 482.51 374\"> <title>mastercard</title> <g> <path d=\"M220.13,421.67V396.82c0-9.53-5.8-15.74-15.32-15.74-5,0-10.35,1.66-14.08,7-2.9-4.56-7-7-13.25-7a14.07,14.07,0,0,0-12,5.8v-5h-7.87v39.76h7.87V398.89c0-7,4.14-10.35,9.94-10.35s9.11,3.73,9.11,10.35v22.78h7.87V398.89c0-7,4.14-10.35,9.94-10.35s9.11,3.73,9.11,10.35v22.78Zm129.22-39.35h-14.5v-12H327v12h-8.28v7H327V408c0,9.11,3.31,14.5,13.25,14.5A23.17,23.17,0,0,0,351,419.6l-2.49-7a13.63,13.63,0,0,1-7.46,2.07c-4.14,0-6.21-2.49-6.21-6.63V389h14.5v-6.63Zm73.72-1.24a12.39,12.39,0,0,0-10.77,5.8v-5h-7.87v39.76h7.87V399.31c0-6.63,3.31-10.77,8.7-10.77a24.24,24.24,0,0,1,5.38.83l2.49-7.46a28,28,0,0,0-5.8-.83Zm-111.41,4.14c-4.14-2.9-9.94-4.14-16.15-4.14-9.94,0-16.15,4.56-16.15,12.43,0,6.63,4.56,10.35,13.25,11.6l4.14.41c4.56.83,7.46,2.49,7.46,4.56,0,2.9-3.31,5-9.53,5a21.84,21.84,0,0,1-13.25-4.14l-4.14,6.21c5.8,4.14,12.84,5,17,5,11.6,0,17.81-5.38,17.81-12.84,0-7-5-10.35-13.67-11.6l-4.14-.41c-3.73-.41-7-1.66-7-4.14,0-2.9,3.31-5,7.87-5,5,0,9.94,2.07,12.43,3.31Zm120.11,16.57c0,12,7.87,20.71,20.71,20.71,5.8,0,9.94-1.24,14.08-4.56l-4.14-6.21a16.74,16.74,0,0,1-10.35,3.73c-7,0-12.43-5.38-12.43-13.25S445,389,452.07,389a16.74,16.74,0,0,1,10.35,3.73l4.14-6.21c-4.14-3.31-8.28-4.56-14.08-4.56-12.43-.83-20.71,7.87-20.71,19.88h0Zm-55.5-20.71c-11.6,0-19.47,8.28-19.47,20.71s8.28,20.71,20.29,20.71a25.33,25.33,0,0,0,16.15-5.38l-4.14-5.8a19.79,19.79,0,0,1-11.6,4.14c-5.38,0-11.18-3.31-12-10.35h29.41v-3.31c0-12.43-7.46-20.71-18.64-20.71h0Zm-.41,7.46c5.8,0,9.94,3.73,10.35,9.94H364.68c1.24-5.8,5-9.94,11.18-9.94ZM268.59,401.79V381.91h-7.87v5c-2.9-3.73-7-5.8-12.84-5.8-11.18,0-19.47,8.7-19.47,20.71s8.28,20.71,19.47,20.71c5.8,0,9.94-2.07,12.84-5.8v5h7.87V401.79Zm-31.89,0c0-7.46,4.56-13.25,12.43-13.25,7.46,0,12,5.8,12,13.25,0,7.87-5,13.25-12,13.25-7.87.41-12.43-5.8-12.43-13.25Zm306.08-20.71a12.39,12.39,0,0,0-10.77,5.8v-5h-7.87v39.76H532V399.31c0-6.63,3.31-10.77,8.7-10.77a24.24,24.24,0,0,1,5.38.83l2.49-7.46a28,28,0,0,0-5.8-.83Zm-30.65,20.71V381.91h-7.87v5c-2.9-3.73-7-5.8-12.84-5.8-11.18,0-19.47,8.7-19.47,20.71s8.28,20.71,19.47,20.71c5.8,0,9.94-2.07,12.84-5.8v5h7.87V401.79Zm-31.89,0c0-7.46,4.56-13.25,12.43-13.25,7.46,0,12,5.8,12,13.25,0,7.87-5,13.25-12,13.25-7.87.41-12.43-5.8-12.43-13.25Zm111.83,0V366.17h-7.87v20.71c-2.9-3.73-7-5.8-12.84-5.8-11.18,0-19.47,8.7-19.47,20.71s8.28,20.71,19.47,20.71c5.8,0,9.94-2.07,12.84-5.8v5h7.87V401.79Zm-31.89,0c0-7.46,4.56-13.25,12.43-13.25,7.46,0,12,5.8,12,13.25,0,7.87-5,13.25-12,13.25C564.73,415.46,560.17,409.25,560.17,401.79Z\" transform=\"translate(-132.74 -48.5)\"/> <g> <rect x=\"169.81\" y=\"31.89\" width=\"143.72\" height=\"234.42\" fill=\"#ff5f00\"/> <path d=\"M317.05,197.6A149.5,149.5,0,0,1,373.79,80.39a149.1,149.1,0,1,0,0,234.42A149.5,149.5,0,0,1,317.05,197.6Z\" transform=\"translate(-132.74 -48.5)\" fill=\"#eb001b\"/> <path d=\"M615.26,197.6a148.95,148.95,0,0,1-241,117.21,149.43,149.43,0,0,0,0-234.42,148.95,148.95,0,0,1,241,117.21Z\" transform=\"translate(-132.74 -48.5)\" fill=\"#f79e1b\"/> </g> </g></svg>`,\n  },\n};\n\nconst CreditCard = ({ data, billing }: CreditCardProps) => {\n  const normalizedData = data\n    .replace(/None/g, \"null\")\n    .replace(/True/g, \"true\")\n    .replace(/False/g, \"false\")\n    .replace(/'/g, '\"');\n  const normalizedBilling = billing\n    .replace(/None/g, \"null\")\n    .replace(/True/g, \"true\")\n    .replace(/False/g, \"false\")\n    .replace(/'/g, '\"');\n\n  const card: ICreditCardStripe = JSON.parse(normalizedData);\n  const billingData: IBillingDetailsStripe = JSON.parse(normalizedBilling);\n  return (\n    <div className={styles.creditcard}>\n      <div className={styles.front}>\n        <div\n          id={styles.ccsingle}\n          dangerouslySetInnerHTML={{ __html: CARDS[card.brand]?.icon }}\n        ></div>\n        <svg viewBox=\"0 0 750 471\" id={styles.cardfront}>\n          <g id=\"CardBackground\">\n            <g id=\"amex_1_\">\n              <path\n                className={`${styles.lightcolor} ${\n                  CARDS[card.brand]?.lightColor ?? styles.grey\n                }`}\n                d=\"M40 0h670c22.1 0 40 17.9 40 40v391c0 22.1-17.9 40-40 40H40c-22.1 0-40-17.9-40-40V40C0 17.9 17.9 0 40 0z\"\n              />\n            </g>\n          </g>\n          <path\n            className={`${styles.darkcolor} ${\n              CARDS[card.brand]?.darkColor ?? styles.greydark\n            }`}\n            d=\"M750 431V193.2c-217.6-57.5-556.4-13.5-750 24.9V431c0 22.1 17.9 40 40 40h670c22.1 0 40-17.9 40-40z\"\n          />\n          <text\n            transform=\"translate(60.106 295.012)\"\n            className={`${styles.st2} ${styles.st3} ${styles.st4}`}\n          >{`**** **** **** ${card.last4}`}</text>\n          <text\n            transform=\"translate(54.106 428.172)\"\n            className={`${styles.st2} ${styles.st5} ${styles.st6}`}\n          >\n            {billingData?.name?.toUpperCase()}\n          </text>\n          <text\n            transform=\"translate(54.107 389.88)\"\n            className={`${styles.st7} ${styles.st5} ${styles.st8}`}\n          >\n            nombre\n          </text>\n          <text\n            transform=\"translate(479.775 388.88)\"\n            className={`${styles.st7} ${styles.st5} ${styles.st8}`}\n          >\n            expira\n          </text>\n          <text\n            transform=\"translate(65.105 241.5)\"\n            className={`${styles.st7} ${styles.st5} ${styles.st8}`}\n          >\n            número de tarjeta\n          </text>\n          <text\n            transform=\"translate(574.422 433.81)\"\n            className={`${styles.st2} ${styles.st5} ${styles.st9}`}\n          >\n            {`${\n              card.exp_month < 10 ? `0${card.exp_month}` : card.exp_month\n            }/${card.exp_year.toString().match(/\\d{2}$/)}`}\n          </text>\n          <text\n            transform=\"translate(479.385 417.01)\"\n            className={`${styles.st2} ${styles.st10} ${styles.st11}`}\n          >\n            VÁLIDO\n          </text>\n          <text\n            transform=\"translate(479.385 435.676)\"\n            className={`${styles.st2} ${styles.st10} ${styles.st11}`}\n          >\n            HASTA\n          </text>\n          <path className={styles.st2} d=\"M554.5 421l-14.1-6.8v13.7z\" />\n          <g>\n            <path d=\"M168.1 143.6H82.9c-10.2 0-18.5-8.3-18.5-18.5V74.9c0-10.2 8.3-18.5 18.5-18.5h85.3c10.2 0 18.5 8.3 18.5 18.5v50.2c-.1 10.2-8.4 18.5-18.6 18.5z\" />\n            <path d=\"M82 70h1.5v60H82zM167.4 70h1.5v60h-1.5zM125.5 130.8c-10.2 0-18.5-8.3-18.5-18.5 0-4.6 1.7-8.9 4.7-12.3-3-3.4-4.7-7.7-4.7-12.3 0-10.2 8.3-18.5 18.5-18.5S144 77.5 144 87.7c0 4.6-1.7 8.9-4.7 12.3 3 3.4 4.7 7.7 4.7 12.3-.1 10.2-8.3 18.5-18.5 18.5zm0-60c-9.3 0-16.9 7.6-16.9 16.9 0 4.4 1.7 8.6 4.8 11.8l.5.5-.5.5c-3.1 3.2-4.8 7.4-4.8 11.8 0 9.3 7.6 16.9 16.9 16.9s16.9-7.6 16.9-16.9c0-4.4-1.7-8.6-4.8-11.8l-.5-.5.5-.5c3.1-3.2 4.8-7.4 4.8-11.8 0-9.3-7.6-16.9-16.9-16.9z\" />\n            <path d=\"M82.8 82.1h25.8v1.5H82.8zM82.8 117.9h26.1v1.5H82.8zM142.4 82.1h25.8v1.5h-25.8zM142 117.9h26.2v1.5H142z\" />\n          </g>\n        </svg>\n      </div>\n    </div>\n  );\n};\n\nexport default CreditCard;\n","import React, { useState } from \"react\";\nimport { Button, Col, Drawer, message, Popconfirm, Radio, Row } from \"antd\";\nimport CreditCard from \"../../components/molecules/CreditCard\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { MY_PAYMENT_METHODS } from \"../../api/queries\";\nimport { MyPaymentMethods } from \"../../api/types/MyPaymentMethods\";\nimport Loading from \"../../components/atoms/Loading\";\nimport Title from \"antd/lib/typography/Title\";\nimport CreateCreditCard from \"../../components/organisms/CreateCreateCard\";\nimport { ADD_PAYMENT_METHOD, REMOVE_PAYMENT_METHOD } from \"../../api/mutations\";\nimport {\n  AddPaymentMethod,\n  AddPaymentMethodVariables,\n} from \"../../api/types/AddPaymentMethod\";\nimport connectionToNodes from \"../../lib/connectionToNodes\";\nimport {\n  RemovePaymentMethod,\n  RemovePaymentMethodVariables,\n} from \"../../api/types/RemovePaymentMethod\";\nimport { useTranslation } from \"react-i18next\";\n\nconst PaymentMethod = () => {\n  const { t } = useTranslation([\"client\", \"translation\"]);\n  const { data, loading } = useQuery<MyPaymentMethods>(MY_PAYMENT_METHODS);\n  const [addPayment] = useMutation<AddPaymentMethod, AddPaymentMethodVariables>(\n    ADD_PAYMENT_METHOD\n  );\n  const [removePaymentMethod] = useMutation<\n    RemovePaymentMethod,\n    RemovePaymentMethodVariables\n  >(REMOVE_PAYMENT_METHOD);\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  if (loading) {\n    return <Loading />;\n  }\n  return (\n    <Row gutter={20}>\n      <Col span={24}>\n        <Title level={2}>{t(\"defaultCard\")}</Title>\n        <Radio.Group\n          value={data?.me?.customer?.defaultPaymentMethod?.stripeId}\n          onChange={(e) => {\n            addPayment({ variables: { paymentMethodId: e.target.value } });\n          }}\n        >\n          {connectionToNodes(data?.me?.customer?.paymentMethods).map((node) => (\n            <Radio key={node.id} value={node.stripeId}>\n              <CreditCard data={node.card} billing={node.billingDetails} />\n              <Popconfirm\n                title={t(\"warnings.card\")}\n                placement=\"topLeft\"\n                onConfirm={() => {\n                  if (node.stripeId) {\n                    if (node.stripeId === data?.me?.customer?.defaultPaymentMethod?.stripeId) {\n                      message.info(t(\"warnings.defaultCard\"))\n                    } else {\n                      removePaymentMethod({\n                        variables: { paymentMethodId: node.stripeId },\n                        update(cache, { data }) {\n                          if (data?.detachPaymentMethod?.ok) {\n                            const ref = cache.identify({ ...node })\n                            cache.evict({\n                              id: ref\n                            })\n                            cache.gc()\n                          }\n                        }\n                      });\n                    }\n                  }\n                }}\n              >\n                <Button danger>{t(\"translation:delete\")}</Button>\n              </Popconfirm>\n            </Radio>\n          ))}\n        </Radio.Group>\n      </Col>\n      <Col span={24}>\n        <Button onClick={() => setIsDrawerOpen(true)}>{t(\"addCard\")}</Button>\n      </Col>\n      <Drawer\n        width={720}\n        visible={isDrawerOpen}\n        onClose={() => setIsDrawerOpen(false)}\n      >\n        <CreateCreditCard\n          onCreated={(paymentMethodId) => {\n            addPayment({\n              variables: {\n                paymentMethodId,\n              },\n            });\n          }}\n        />\n      </Drawer>\n    </Row>\n  );\n};\n\nexport default PaymentMethod;\n","import React, { useState } from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useMutation } from \"@apollo/client\";\nimport { Errors as IErrors, useAuth } from \"../../lib/auth\";\nimport {\n  DeleteAccount,\n  DeleteAccountVariables,\n} from \"../../api/types/DeleteAccount\";\nimport { DELETE_ACCOUNT } from \"../../api/mutations\";\nimport Errors from \"../molecules/Errors\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface ProfileDangerZoneProps {\n  id: string;\n  confirmPassword: boolean;\n}\n\nconst ProfileDangerZone = ({ id, confirmPassword }: ProfileDangerZoneProps) => {\n  const [errors, setErrors] = useState<IErrors>();\n  const [deleteAccount] = useMutation<DeleteAccount, DeleteAccountVariables>(\n    DELETE_ACCOUNT\n  );\n  const {t} = useTranslation(\"client\");\n  const { logout } = useAuth();\n  if (!confirmPassword) {\n    return null;\n  }\n  return (\n    <div>\n      <Errors errors={errors} fields={[\"password\"]} />\n      <Form\n        onFinish={(values) => {\n          deleteAccount({ variables: { password: values.password } }).then(\n            ({ data }) => {\n              if (data?.deleteAccount?.success) {\n                logout?.();\n              } else {\n                setErrors(data?.deleteAccount?.errors);\n              }\n            }\n          );\n        }}\n      >\n        <Form.Item\n          name=\"password\"\n          label={t(\"confirmPasswordDelete\")}\n        >\n          <Input.Password />\n        </Form.Item>\n        <Button htmlType=\"submit\" type=\"primary\" danger>\n          {t(\"confirmDeleteAccount\")}\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default ProfileDangerZone;\n","import Table, { ColumnsType } from \"antd/lib/table\";\nimport React, { useMemo } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport {\n  MyAccount_me_apps,\n  MyAccount_me_apps_edges_node,\n} from \"../../api/types/MyAccount\";\nimport { getAppBuildState } from \"../../lib/appBuildState\";\nimport connectionToNodes from \"../../lib/connectionToNodes\";\nimport BuildState from \"./BuildState\";\n\ninterface AppsTableProps {\n  dataSource?: MyAccount_me_apps;\n  columns?: ColumnsType<MyAccount_me_apps_edges_node>;\n}\n\nconst AppsTable = ({ dataSource, columns }: AppsTableProps) => {\n  const { t } = useTranslation();\n  const allCols = useMemo(() => {\n      const cols: ColumnsType<MyAccount_me_apps_edges_node> = [\n        {\n          title: t(\"icon\"),\n          dataIndex: \"logo\",\n          key: \"icon\",\n          render: (logo) => (\n            <img\n              src={logo}\n              alt=\"\"\n              width={40}\n              height={40}\n              style={{ objectFit: \"contain\" }}\n            />\n          ),\n        },\n        {\n          title: t(\"name\"),\n          dataIndex: \"name\",\n          key: \"name\",\n          render: (name, record) => (\n            <Link to={`/app/${record.id}`}>{name}</Link>\n          ),\n        },\n        {\n          title: t(\"urls\"),\n          dataIndex: \"storeLinks\",\n          key: \"urls\",\n          // responsive: [\"md\"],\n          render: (urls) => {\n            if (!urls.ios && !urls.android) return <span>-</span>;\n            return (\n              <>\n                <a href={urls.ios} style={{ padding: 5 }}>\n                  iOS\n                </a>\n                <a href={urls.android} style={{ padding: 5 }}>\n                  Android\n                </a>\n              </>\n            );\n          },\n        },\n        {\n          title: t(\"state\"),\n          dataIndex: \"builds\",\n          key: \"state\",\n          render: (_, record) => {\n            return <BuildState state={getAppBuildState(record)}></BuildState>;\n          },\n        },\n      ];\n      return columns ? [...cols, ...columns] : cols;\n    }, [columns, t]);\n  return (\n    <Table\n      columns={allCols}\n      dataSource={connectionToNodes(dataSource)}\n      pagination={false}\n    />\n  );\n};\n\nexport default AppsTable;\n","import { RoutePath } from \"../components/organisms/Router\";\nimport Validate from \"../pages/auth/Validate\";\nimport App from \"../pages/client/App\";\nimport Checkout from \"../pages/client/Checkout\";\nimport EditProfile from \"../pages/client/EditProfile\";\nimport NewApp from \"../pages/client/NewApp\";\nimport Pay from \"../pages/client/Pay\";\nimport PaymentMethod from \"../pages/client/PaymentMethod\";\nimport Profile from \"../pages/client/Profile\";\n\nconst routes: RoutePath[] = [\n  {\n    exact: true,\n    path: \"/\",\n    redirect: \"/profile\",\n  },\n  {\n    exact: true,\n    path: \"/profile\",\n    name: \"Perfil\",\n    component: Profile,\n  },\n  {\n    exact: true,\n    path: \"/profile/edit\",\n    name: \"Editar Perfil\",\n    component: EditProfile,\n  },\n  {\n    exact: true,\n    path: \"/profile/paymentMethods\",\n    name: \"Editar Métodos de Pago\",\n    component: PaymentMethod,\n  },\n  {\n    exact: true,\n    path: \"/pay\",\n    name: \"Pago\",\n    component: Pay,\n  },\n  {\n    exact: true,\n    path: \"/checkout\",\n    name: \"Check Out\",\n    component: Checkout,\n  },\n  {\n    exact: true,\n    path: \"/app/new\",\n    name: \"Nueva App\",\n    component: NewApp,\n  },\n  {\n    exact: false,\n    path: \"/app/:appId\",\n    name: \"Editar App\",\n    component: App,\n  },\n  {\n    exact: true,\n    path: \"/activate/:token\",\n    name: \"Activar Cuenta\",\n    component: Validate,\n  },\n];\n\nexport default routes;\n","import {\n  Alert,\n  Button,\n  Card,\n  Col,\n  Dropdown,\n  Menu,\n  Modal,\n  Popconfirm,\n  Row,\n  Typography,\n} from \"antd\";\nimport React, { useState } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport {\n  Placeholder,\n  TitleWithAction,\n  ProfileInfo,\n} from \"../../components/molecules\";\nimport { MY_ACCOUNT } from \"../../api/queries\";\nimport { MyAccount } from \"../../api/types/MyAccount\";\nimport Loading from \"../../components/atoms/Loading\";\nimport { AccountAccountStatus } from \"../../api/types/globalTypes\";\nimport ProfileDangerZone from \"../../components/organisms/ProfileDangerZone\";\nimport AppsTable from \"../../components/molecules/AppsTable\";\nimport { UNSUBSCRIBE } from \"../../api/mutations\";\nimport { Unsubscribe, UnsubscribeVariables } from \"../../api/types/Unsubscribe\";\nimport { EllipsisOutlined } from \"@ant-design/icons\";\nimport { Trans, useTranslation } from \"react-i18next\";\n\nconst Profile = () => {\n  const history = useHistory();\n  const [confirmPassword, setConfirmPassword] = useState(false);\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\n  const { t } = useTranslation([\"client\", \"translation\"]);\n  const { loading, data } = useQuery<MyAccount>(MY_ACCOUNT);\n  const [unsubscribe] = useMutation<Unsubscribe, UnsubscribeVariables>(\n    UNSUBSCRIBE\n  );\n  if (loading) return <Loading />;\n\n  const profileMenu = (\n    <Menu>\n      <Menu.Item>\n        <Link to=\"/profile/edit\">{t(\"edit\")}</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"/profile/paymentMethods\">{t(\"changePaymentMethod\")}</Link>\n      </Menu.Item>\n      <Menu.Divider></Menu.Divider>\n      {data?.me?.accountStatus === AccountAccountStatus.PAID_ACCOUNT && (\n        <Menu.Item>\n          <Popconfirm\n            title={\n              <Trans i18nKey=\"warnings.subscription\" ns=\"client\">\n                <h4>¿Realmente deseas cancelar la suscripción al servicio?</h4>\n                <p>\n                  Todas las apps que tengas serán eliminadas de las tiendas de\n                  aplicaciones\n                </p>\n              </Trans>\n            }\n            placement=\"left\"\n            onConfirm={() => {\n              setIsOverlayVisible(false);\n              if (data?.me?.id) {\n                unsubscribe({\n                  variables: { userId: data?.me?.id },\n                  update(cache, { data: result }) {\n                    if (result?.dropOut?.ok && data.me) {\n                      cache.modify({\n                        id: cache.identify({\n                          __ref: data?.me.id,\n                          __typename: data?.me.__typename,\n                        }),\n                        fields: {\n                          accountStatus: () => AccountAccountStatus.REGISTERED,\n                        },\n                      });\n                    }\n                  },\n                });\n              }\n            }}\n          >\n            <Typography.Text type=\"danger\">\n              {t(\"cancelSubscription\")}\n            </Typography.Text>\n          </Popconfirm>\n        </Menu.Item>\n      )}\n      <Menu.Item>\n        <Popconfirm\n          title={t(\"warnings.account\")}\n          placement=\"left\"\n          onConfirm={() => {\n            setConfirmPassword(true);\n            setIsOverlayVisible(false);\n          }}\n        >\n          <Typography.Text type=\"danger\">{t(\"deleteAccount\")}</Typography.Text>\n        </Popconfirm>\n      </Menu.Item>\n    </Menu>\n  );\n  const profieActions = (\n    <Dropdown\n      overlay={profileMenu}\n      trigger={[\"click\"]}\n      visible={isOverlayVisible}\n      onVisibleChange={setIsOverlayVisible}\n    >\n      <Button shape=\"circle\" icon={<EllipsisOutlined></EllipsisOutlined>} />\n    </Dropdown>\n  );\n  return (\n    <>\n      {!data?.me?.verified && (\n        <Row gutter={[20, 20]}>\n          <Col span={24}>\n            <Alert\n              showIcon\n              message={t(\"validate.message\")}\n              description={t(\"validate.description\")}\n              type=\"warning\"\n            />\n          </Col>\n        </Row>\n      )}\n      <Row gutter={[20, 20]}>\n        <Col lg={12} xs={24}>\n          <Card>\n            <ProfileInfo profile={data?.me} action={profieActions} />\n            {data?.me?.accountStatus === AccountAccountStatus.REGISTERED && (\n              <Placeholder\n                claim={t(\"subscribeNow\")}\n                cta={{ title: t(\"subscribe\"), link: \"/pay\" }}\n              ></Placeholder>\n            )}\n          </Card>\n        </Col>\n        <Col lg={12} xs={24}>\n          <Card>\n            {(data?.me?.apps?.edges.length ?? 0) > 0 ? (\n              <>\n                <TitleWithAction\n                  title={t(\"translation:apps\")}\n                  action={{\n                    action: () => history.push(\"/app/new\"),\n                    label: t(\"addNew\"),\n                  }}\n                />\n                <AppsTable dataSource={data?.me?.apps} />\n              </>\n            ) : (\n              <Placeholder\n                claim={t(\"addAppClaim\")}\n                cta={{ title: t(\"addNewApp\"), link: \"/app/new\" }}\n              ></Placeholder>\n            )}\n          </Card>\n        </Col>\n      </Row>\n      <Modal\n        visible={confirmPassword}\n        title={t(\"deleteAccount\")}\n        onCancel={() => {\n          setConfirmPassword(false);\n        }}\n        okButtonProps={{ style: { display: \"none\" } }}\n      >\n        <ProfileDangerZone\n          id={data?.me?.id ?? \"\"}\n          confirmPassword={confirmPassword}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { Table } from \"antd\";\nimport { useQuery } from \"@apollo/client\";\nimport { ColumnsType } from \"antd/lib/table\";\nimport BuildStateVisualizer from \"../../components/molecules/BuildState\";\nimport { Builds as IBuilds, BuildsVariables, Builds_builds_edges_node } from \"../../api/types/Builds\";\nimport { BUILDS } from \"../../api/queries\";\nimport Loading from \"../../components/atoms/Loading\";\nimport { BuildBuildStatus } from \"../../api/types/globalTypes\";\nimport connectionToNodes from \"../../lib/connectionToNodes\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Builds = () => {\n  const { loading, data } = useQuery<IBuilds, BuildsVariables>(BUILDS);\n  const { t } = useTranslation([\"translation\", \"admin\"]);\n  if (loading) {\n    return <Loading />;\n  }\n  const columns: ColumnsType<Builds_builds_edges_node> = [\n    {\n      title: t(\"admin:date\"),\n      dataIndex: \"date\",\n      key: \"data\",\n      render: (date: Date) => date.toLocaleDateString(),\n    },\n    { title: t(\"buildId\"), dataIndex: \"id\", key: \"buildId\" },\n    {\n      title: t(\"admin:client\"),\n      dataIndex: [\"app\", \"client\", \"name\"],\n      key: \"client\",\n    },\n    {\n      title: t(\"admin:clientID\"),\n      dataIndex: [\"app\", \"customer\", \"id\"],\n      key: \"clientId\",\n    },\n    { title: t(\"app\"), dataIndex: [\"app\", \"name\"], key: \"app\" },\n    {\n      title: t(\"state\"),\n      dataIndex: \"buildStatus\",\n      key: \"state\",\n      render: (state: BuildBuildStatus) => {\n        return <BuildStateVisualizer state={state}></BuildStateVisualizer>;\n      },\n    },\n  ];\n  return (\n    <div>\n      <Table columns={columns} dataSource={connectionToNodes(data?.builds)} />\n    </div>\n  );\n};\n\nexport default Builds;\n","import React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport Table, { ColumnsType } from \"antd/lib/table\";\nimport { Link } from \"react-router-dom\";\nimport { CLIENTS } from \"../../api/queries\";\nimport {\n  Clients as IClients,\n  ClientsVariables,\n  Clients_users_edges_node,\n  Clients_users_edges_node_apps_edges,\n} from \"../../api/types/Clients\";\nimport Loading from \"../../components/atoms/Loading\";\nimport { AccountAccountStatus } from \"../../api/types/globalTypes\";\nimport UserState from \"../../components/molecules/UserState\";\nimport connectionToNodes from \"../../lib/connectionToNodes\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Clients = () => {\n  const { t } = useTranslation([\"translation\", \"admin\"]);\n  const { loading, data } = useQuery<IClients, ClientsVariables>(CLIENTS);\n  if (loading) {\n    return <Loading />;\n  }\n\n  const columns: ColumnsType<Clients_users_edges_node> = [\n    {\n      title: t(\"name\"),\n      dataIndex: \"username\",\n      key: \"name\",\n      render: (name, record) => (\n        <Link to={`/clients/${record.id}`}>{name}</Link>\n      ),\n    },\n    {\n      title: t(\"admin:clientID\"),\n      dataIndex: \"id\",\n      key: \"id\",\n      render: (id) => <Link to={`/clients/${id}`}>{id}</Link>,\n    },\n    {\n      title: t(\"apps\"),\n      dataIndex: [\"apps\", \"edges\"],\n      key: \"apps\",\n      render: (apps: Clients_users_edges_node_apps_edges[]) => apps.length,\n    },\n    {\n      title: t(\"state\"),\n      dataIndex: \"accountStatus\",\n      key: \"state\",\n      render: (state: AccountAccountStatus) => <UserState state={state} />,\n    },\n  ];\n  return (\n    <div>\n      <Table columns={columns} dataSource={connectionToNodes(data?.users)} />\n    </div>\n  );\n};\n\nexport default Clients;\n","import Table, { ColumnsType } from \"antd/lib/table\";\nimport React from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Client_user_apps_edges_node_builds_edges_node } from \"../../api/types/Client\";\nimport { BuildBuildStatus } from \"../../api/types/globalTypes\";\nimport BuildState from \"./BuildState\";\n\ninterface BuildsTableProps {\n  dataSource: Client_user_apps_edges_node_builds_edges_node[];\n}\n\nconst BuildsTable = ({ dataSource }: BuildsTableProps) => {\n  const { t } = useTranslation();\n  const columns: ColumnsType<Client_user_apps_edges_node_builds_edges_node> = [\n    {\n      title: t(\"date\"),\n      dataIndex: \"date\",\n      key: \"data\",\n      render: (date: Date) => date.toLocaleDateString(),\n    },\n    { title: t(\"buildId\"), dataIndex: \"id\", key: \"buildId\" },\n    { title: \"App\", dataIndex: [\"app\", \"name\"], key: \"app.name\" },\n    {\n      title: t(\"state\"),\n      dataIndex: \"buildStatus\",\n      key: \"state\",\n      render: (state: BuildBuildStatus) => {\n        return <BuildState state={state}></BuildState>;\n      },\n    },\n  ];\n  return <Table columns={columns} dataSource={dataSource} />;\n};\n\nexport default BuildsTable;\n","import React, { useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { CLIENT } from \"../../api/queries\";\nimport {\n  Client as IClient,\n  ClientVariables,\n  Client_user_apps,\n  Client_user_apps_edges_node_builds_edges_node,\n} from \"../../api/types/Client\";\nimport Loading from \"../../components/atoms/Loading\";\nimport {\n  Button,\n  Card,\n  Col,\n  Dropdown,\n  Menu,\n  message,\n  Popconfirm,\n  Row,\n  Typography,\n} from \"antd\";\nimport AppsTable from \"../../components/molecules/AppsTable\";\nimport BuildsTable from \"../../components/molecules/BuildsTable\";\nimport { DeleteOutlined, EllipsisOutlined } from \"@ant-design/icons\";\nimport { BAN_USER, DELETE_APP, UNSUBSCRIBE } from \"../../api/mutations\";\nimport { DeleteApp, DeleteAppVariables } from \"../../api/types/DeleteApp\";\nimport { BanUser, BanUserVariables } from \"../../api/types/BanUser\";\nimport { AccountAccountStatus } from \"../../api/types/globalTypes\";\nimport connectionToNodes from \"../../lib/connectionToNodes\";\nimport { ProfileInfo } from \"../../components/molecules\";\nimport { Unsubscribe, UnsubscribeVariables } from \"../../api/types/Unsubscribe\";\nimport { useTranslation } from \"react-i18next\";\n\nconst { Text } = Typography;\n\ninterface ClientProps {\n  id: string;\n}\n\nfunction getBuilds(apps?: Client_user_apps) {\n  const nodes = connectionToNodes(apps);\n  let all: Client_user_apps_edges_node_builds_edges_node[] = [];\n  nodes.forEach(({ builds, name, id }) => {\n    const buildNodes =\n      connectionToNodes(builds).map((build) => ({\n        ...build,\n        app: { id, name },\n      })) ?? [];\n    all.push(...buildNodes);\n  });\n  return all;\n}\n\nconst Client = () => {\n  const {t} = useTranslation(\"admin\")\n  const { id } = useParams<ClientProps>();\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\n  const { loading, data } = useQuery<IClient, ClientVariables>(CLIENT, {\n    variables: { id },\n  });\n  const [deleteApp] = useMutation<DeleteApp, DeleteAppVariables>(DELETE_APP);\n  const [banUser] = useMutation<BanUser, BanUserVariables>(BAN_USER);\n  const [unsubscribe] = useMutation<Unsubscribe, UnsubscribeVariables>(\n    UNSUBSCRIBE\n  );\n  if (loading) {\n    return <Loading />;\n  }\n\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <Popconfirm\n          title={\n            data?.user?.accountStatus === AccountAccountStatus.BANNED\n              ? t(\"warings.unban\")\n              : t(\"warnings.ban\")\n          }\n          onConfirm={() => {\n            setIsOverlayVisible(false);\n            if (data?.user?.id) {\n              banUser({\n                variables: {\n                  userId: data.user.id,\n                  ban:\n                    data?.user?.accountStatus !== AccountAccountStatus.BANNED,\n                },\n                update(cache, { data: banData }) {\n                  if (banData?.banUser?.ok) {\n                    cache.modify({\n                      id: cache.identify({ ...data.user }),\n                      fields: {\n                        accountStatus(prev: AccountAccountStatus) {\n                          return prev === AccountAccountStatus.BANNED\n                            ? AccountAccountStatus.REGISTERED\n                            : AccountAccountStatus.BANNED;\n                        },\n                      },\n                    });\n                  }\n                },\n              });\n            }\n          }}\n        >\n          <Text type=\"danger\">\n            {data?.user?.accountStatus === AccountAccountStatus.BANNED\n              ? \"Desbanear\"\n              : \"Banear Cuenta\"}\n          </Text>\n        </Popconfirm>\n      </Menu.Item>\n      <Menu.Item>\n        <Popconfirm\n          title={t(\"warnings.account\")}\n          placement=\"left\"\n          onConfirm={() => {\n            setIsOverlayVisible(false);\n            unsubscribe({ variables: { userId: id } });\n          }}\n        >\n          <Text type=\"danger\">\n            {t(\"unsubscribe\")}\n          </Text>\n        </Popconfirm>\n      </Menu.Item>\n    </Menu>\n  );\n  const profieActions = (\n    <Dropdown\n      overlay={menu}\n      trigger={[\"click\"]}\n      visible={isOverlayVisible}\n      onVisibleChange={setIsOverlayVisible}\n    >\n      <Button shape=\"circle\" icon={<EllipsisOutlined></EllipsisOutlined>} />\n    </Dropdown>\n  );\n\n  return (\n    <>\n      <Row style={{ marginBottom: 20 }}>\n        <Col sm={12} xs={24}>\n          <Card>\n            <Row gutter={10}>\n              <Col span={24}>\n                <ProfileInfo profile={data?.user} action={profieActions} />\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n      </Row>\n      <Row gutter={20}>\n        <Col md={12} sm={24}>\n          <Card>\n            <AppsTable\n              dataSource={data?.user?.apps}\n              columns={[\n                {\n                  title: t(\"actions\"),\n                  key: \"actions\",\n                  render: (_, record) => {\n                    return (\n                      <Popconfirm\n                        title={t(\"warnings.app\")}\n                        onConfirm={() => {\n                          deleteApp({\n                            variables: {\n                              id: record.id,\n                            },\n                            update(cache, { data }) {\n                              if (data?.deleteApp?.ok) {\n                                const id = cache.identify({ ...record });\n                                cache.evict({\n                                  id,\n                                });\n                                cache.gc();\n                              } else {\n                                message.error(data?.deleteApp?.error);\n                              }\n                            },\n                          });\n                        }}\n                      >\n                        <Button danger>\n                          <DeleteOutlined />\n                        </Button>\n                      </Popconfirm>\n                    );\n                  },\n                },\n              ]}\n            />\n          </Card>\n        </Col>\n        <Col md={12} sm={24}>\n          <Card>\n            <BuildsTable dataSource={getBuilds(data?.user?.apps)} />\n          </Card>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nexport default Client;\n","import { RoutePath } from \"../components/organisms/Router\";\nimport Builds from \"../pages/admin/Builds\";\nimport Clients from \"../pages/admin/Clients\";\nimport Client from \"../pages/admin/Client\";\n\nconst routes: RoutePath[] = [\n  {\n    exact: true,\n    path: \"/\",\n    redirect: \"/clients\",\n  },\n  {\n    exact: true,\n    path: \"/builds\",\n    name: \"Builds\",\n    component: Builds,\n  },\n  {\n    exact: true,\n    path: \"/clients\",\n    name: \"Clientes\",\n    component: Clients,\n  },\n  {\n    exact: true,\n    path: \"/clients/:id\",\n    name: \"Cliente\",\n    component: Client,\n  },\n];\n\nexport default routes;\n","import React from \"react\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport { Typography } from \"antd\";\nimport { useQuery } from \"@apollo/client\";\nimport { Logo } from \"../atoms\";\nimport HeaderSessionInfo from \"../molecules/HeaderSessionInfo\";\nimport clientRoutes from \"../../lib/routes\";\nimport adminoutes from \"../../lib/adminRoutes\";\n\nimport { ME } from \"../../api/queries\";\nimport { Me } from \"../../api/types/Me\";\n\nimport styles from \"./Header.module.css\";\nimport { RightOutlined } from \"@ant-design/icons\";\n\nconst routes = [...clientRoutes, ...adminoutes];\n\nconst Header = () => {\n  const { data } = useQuery<Me>(ME);\n  const location = useLocation();\n  let route = routes.find((r) => r.path === location.pathname);\n  if (!route) {\n    route = routes\n      .filter((r) => /:\\w+/.exec(r.path))\n      .map((r) => {\n        const path = r.path.replace(/:\\w+/, \"\");\n        return {\n          ...r,\n          path,\n        };\n      })\n      .find((r) => location.pathname.includes(r.path));\n  }\n\n  return (\n    <header className={styles.container}>\n      <Link to=\"/\">\n        <Logo />\n      </Link>\n      <Typography.Title level={2} className={styles.title}>\n        <RightOutlined className={styles.titleIcon} /> {route?.name}\n      </Typography.Title>\n      {data?.me?.email && (\n        <HeaderSessionInfo email={data.me.email} name={data.me.username} />\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nexport interface RoutePath {\n  exact: boolean;\n  path: string;\n  redirect?: string;\n  component?: () => JSX.Element;\n  name?: string;\n}\n\ninterface RouterProps {\n  routes: RoutePath[];\n}\n\nconst Router = ({ routes }: RouterProps) => {\n  return (\n    <Switch>\n      {routes.map((MyRoute) => (\n        <Route key={MyRoute.path} exact={MyRoute.exact} path={MyRoute.path}>\n          {MyRoute.redirect ? (\n            <Redirect to={{ pathname: MyRoute.redirect }} />\n          ) : (\n            MyRoute.component && <MyRoute.component />\n          )}\n        </Route>\n      ))}\n    </Switch>\n  );\n};\n\nexport default Router;\n","import { Radio } from \"antd\";\nimport React from \"react\";\nimport { RightCircleOutlined } from \"@ant-design/icons\";\nimport { useQuery } from \"@apollo/client\";\nimport TemplatePreview from \"../molecules/TemplatePreview\";\n\nimport styles from \"./TemplateSelector.module.css\";\nimport Title from \"antd/lib/typography/Title\";\nimport { TEMPLATES } from \"../../api/queries\";\nimport { Templates } from \"../../api/types/Templates\";\nimport Loading from \"../atoms/Loading\";\nimport connectionToNodes from \"../../lib/connectionToNodes\";\nimport { useTranslation } from \"react-i18next\";\n\ninterface TemplateSelectorProps {\n  value?: string;\n  onChange: (selected: string) => void;\n}\n\nconst TemplateSelector = ({ value, onChange }: TemplateSelectorProps) => {\n  const { t } = useTranslation(\"client\");\n  const {loading, data} = useQuery<Templates>(TEMPLATES);\n  if (loading) {\n    return <Loading />\n  }\n  const templates = connectionToNodes(data?.templates);\n  return (\n    <div className={styles.container}>\n      <Title level={3}>{t(\"template\")}</Title>\n      <Radio.Group\n        value={value ?? templates[0]?.id}\n        onChange={(e) => onChange(e.target.value)}\n        style={{ overflowX: \"scroll\", display: \"flex\" }}\n      >\n        {templates.map((template) => (\n          <Radio.Button\n            value={template.id}\n            key={template.id}\n            style={{ height: \"auto\" }}\n          >\n            <TemplatePreview\n              name={template.name ?? \"\"}\n              image={template.previewImg ?? \"\"}\n            />\n          </Radio.Button>\n        ))}\n      </Radio.Group>\n      <div className={styles.overlay}>\n        <span className={styles.arrow}>\n          <RightCircleOutlined style={{ fontSize: \"16px\", color: \"#333\" }} />\n        </span>\n      </div>\n    </div>\n  );\n};\n\nexport default TemplateSelector;\n","import React from \"react\";\nimport { Header } from \"../organisms\";\n\nimport styles from \"./Dashboard.module.css\";\n\ninterface DashboardTemplateProps {\n  children: React.ReactNode;\n  header?: React.ReactNode;\n}\n\nconst DashboardTemplate = ({\n  children,\n  header: SubHeader,\n}: DashboardTemplateProps) => {\n  return (\n    <>\n      <Header />\n      {SubHeader}\n      <main className={styles.main}>{children}</main>\n    </>\n  );\n};\n\nexport default DashboardTemplate;\n","import React from \"react\";\nimport Router from \"../../components/organisms/Router\";\nimport routes from \"../../lib/adminRoutes\";\n\nconst AdminDashboard = () => {\n  return <Router routes={routes} />;\n};\n\nexport default AdminDashboard;\n","import React from \"react\";\nimport Router from \"../../components/organisms/Router\";\nimport routes from \"../../lib/routes\";\n\nconst ClientDashboard = () => {\n  return <Router routes={routes} />;\n};\n\nexport default ClientDashboard;\n","import React from \"react\";\nimport AdminHeader from \"../components/organisms/AdminHeader\";\nimport DashboardTemplate from \"../components/templates/Dashboard\";\nimport { useAuth } from \"../lib/auth\";\nimport AdminDashboard from \"./admin\";\nimport ClientDashboard from \"./client\";\n\n\nconst Dashboard = () => {\n  const { isAdmin } = useAuth();\n  return (\n    <DashboardTemplate header={isAdmin ? <AdminHeader /> : null}>\n      {isAdmin ? <AdminDashboard /> : <ClientDashboard />}\n    </DashboardTemplate>\n  );\n};\n\nexport default Dashboard;\n","import { ApolloClient, InMemoryCache, concat } from \"@apollo/client\";\nimport { onError } from \"@apollo/client/link/error\";\nimport { setContext } from \"@apollo/client/link/context\";\nimport { createUploadLink } from \"apollo-upload-client\";\nimport { getToken } from \"./auth\";\n\nconst cache = new InMemoryCache({\n  typePolicies: {\n    BuildType: {\n      fields: {\n        date: {\n          read(existing) {\n            return new Date(existing);\n          },\n        },\n      },\n    },\n  },\n});\n\nconst errorLink = onError(({ graphQLErrors, networkError }) => {\n  if (graphQLErrors) {\n    graphQLErrors.forEach(({ message, locations, path }) => {\n      console.log(\n        `[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`\n      );\n    });\n  }\n  if (networkError) {\n    console.log(`[Network error]: ${networkError}`);\n  }\n});\n\nconst uri =\n  process.env.NODE_ENV === \"development\"\n    ? \"/graphql\"\n    : `index.php?controller=AdminYownesAjax&action=proxy&ajax=true&${\n        (window as any).__TOKEN__\n      }`;\n\nconst httpLink = createUploadLink({\n  uri,\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = getToken();\n\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `JWT ${token}` : \"\",\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: errorLink.concat(concat(authLink, httpLink)),\n  cache,\n});\n\nexport default client;\n","import React from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Tos = () => {\n  const { t } = useTranslation();\n  return (\n    <div>\n      <h1>{t(\"tos.title\")}</h1>\n    </div>\n  );\n};\n\nexport default Tos;\n","import React, { Suspense } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { ApolloProvider } from \"@apollo/client\";\nimport \"./App.css\";\nimport Auth from \"./pages/auth\";\nimport PrivateRoute from \"./components/molecules/PrivateRoute\";\nimport Dashboard from \"./pages/Dashboard\";\nimport client from \"./lib/apolloClient\";\nimport { AuthProvider } from \"./lib/auth\";\nimport Tos from \"./pages/Tos\";\nimport Loading from \"./components/atoms/Loading\";\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <AuthProvider>\n        <Suspense fallback={<Loading />}>\n          <Router>\n            <Switch>\n              <Route path=\"/auth\">\n                <Auth />\n              </Route>\n              <Route exact path={`/tos`}>\n                <Tos />\n              </Route>\n              <PrivateRoute path=\"/\">\n                <Dashboard />\n              </PrivateRoute>\n            </Switch>\n          </Router>\n        </Suspense>\n      </AuthProvider>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\nimport Backend from \"i18next-http-backend\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\n\ni18n\n  .use(Backend)\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    fallbackLng: \"es-ES\",\n    debug: true,\n    backend: {\n      loadPath: \"/locales/{{lng}}/{{ns}}.json\",\n    },\n    ns: [\"translation\", \"admin\", \"auth\", \"client\"],\n  });\n\nexport default i18n;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./i18n\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}